{"version":3,"sources":["webpack:///./src/app/pages/config/webconsumeconfig.ts","webpack:///./src/app/pages/config/webissueconfig.ts","webpack:///./src/app/pages/firebasekyc-page/kyc.service.ts","webpack:///./src/app/pages/pipes/fromsatoshi.ts","webpack:///./src/app/pages/pipes/pipes.module.ts","webpack:///./src/app/pages/pipes/redact.ts","webpack:///./src/app/pages/pipes/tofiat.ts","webpack:///./src/app/pages/pipes/tofiatbtc.ts","webpack:///./src/app/pages/pipes/tofiatdash.ts","webpack:///./src/app/pages/tab4wallet/blue011.consume.service.ts","webpack:///./src/app/pages/tab4wallet/blue011.issue.service.ts"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAO,IAAM,uBAAuB,GAAG;IACnC,MAAM,EAAE,SAAS,GAAC,sJAAsJ;CAE3K,CAAC;AAEK,IAAM,uBAAuB,GAAG;IACnC,MAAM,EAAE,SAAS,GAAC,sJAAsJ;CAE3K,CAAC;;;;;;;;;;;;;ACRF;AAAA;AAAA;AAAO,IAAM,qBAAqB,GAAG;IACjC,MAAM,EAAE,SAAS,GAAC,sJAAsJ;CAE3K,CAAC;AAEK,IAAM,qBAAqB,GAAG;IACjC,MAAM,EAAE,SAAS,GAAC,sJAAsJ;CAE3K,CAAC;;;;;;;;;;;;;;;;;;;;;ACTyC;AACG;AACL;AAGS;AAUlD;IAkBE,oBAAmB,IAAU,EAAS,OAAgB;QAAnC,SAAI,GAAJ,IAAI,CAAM;QAAS,YAAO,GAAP,OAAO,CAAS;QAdtD,oBAAe,GAAE,EAAE,CAAC;QACpB,qBAAgB,GAAE,EAAE,CAAC;QAEpB,cAAS,GAAc;YACtB,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,YAAY,EAAE,EAAE;YAChB,SAAS,EAAE,EAAE;SAEd,CAAC;QAIE,IAAI,CAAC,GAAG,GAAG,+DAAW,CAAC,YAAY,CAAE;IAEzC,CAAC;IACK,iCAAY,GAAlB;;;;;4BACY,qBAAM,IAAI,CAAC,gBAAgB,EAAE;;wBAAlC,EAAE,GAAG,SAA6B;wBAEtC,sBAAO,IAAI,CAAC,SAAS,EAAC;;;;KAExB;IAGD,qCAAgB,GAAhB;QAAA,iBAWC;QAVI,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACpC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,WAAW,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;gBAC9D,IAAG,IAAI,EAAE;oBACT,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;iBACrB;gBACD,OAAO,CAAC,CAAC,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;QAEH,CAAC,CAAC;IAEN,CAAC;IAED,oCAAe,GAAf,UAAiB,OAAY;QAA7B,iBA6BC;QAzBK,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAE7B,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;gBAE9D,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;gBAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC;gBAC5C,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;gBAKpD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,GAAG,6BAA6B,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;qBAClG,SAAS,CAAC,aAAG;oBAEZ,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;oBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;gBAEhB,CAAC,EAAE,UAAC,GAAG;oBACL,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YAET,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,CAAC;IAET,CAAC;IAED,+BAAU,GAAV,UAAa,OAAY;QAAzB,iBA4BC;QAzBK,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAE7B,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;gBAE9D,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;gBAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC;gBAC5C,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;gBAKpD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,GAAG,wBAAwB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;qBAC7F,SAAS,CAAC,aAAG;oBAEZ,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;oBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;gBAEhB,CAAC,EAAE,UAAC,GAAG;oBACL,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YAET,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,CAAC;IAET,CAAC;IAtGU,UAAU;QAJtB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAoByB,kDAAI,EAAkB,sDAAO;OAlB3C,UAAU,CA0GtB;IAAD,iBAAC;CAAA;AA1GsB;;;;;;;;;;;;;;;;;;;ACfuC;AACH;AAO3D;IACE,yBAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAClD,CAAC;IAED,mCAAS,GAAT,UAAU,IAAY,EAAE,IAAQ;QAC9B,kCAAkC;QAChC,OAAQ,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC;IAPQ,eAAe;QAJ3B,0DAAI,CAAC;YACJ,IAAI,EAAE,aAAa;SACpB,CAAC;+EAGoC,mEAAc;OADvC,eAAe,CAS3B;IAAD,sBAAC;CAAA;AAT2B;;;;;;;;;;;;;;;;;;;;;;;;ACRa;AAGM;AACV;AACA;AACM;AACE;AAEtC,IAAM,KAAK,GAAG;IACpB,kDAAU;IACV,kDAAU;IACV,wDAAa;IACb,0DAAc;IACX,4DAAe;CAElB,CAAC;AAOF;IAAA;IAA2B,CAAC;IAAf,WAAW;QALvB,8DAAQ,CAAC;YACR,YAAY,EAAC,CAAC,KAAK,CAAC;YACpB,OAAO,EAAE,CAAC,KAAK,CAAC;SACjB,CAAC;OAEW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;ACvBsC;AAO9D;IACE;IACA,CAAC;IAED,8BAAS,GAAT,UAAU,IAAY,EAAE,IAAS;QAC5B,IAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YAClB,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAChC,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,MAAM,GAAG,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC;YAClC,OAAO,MAAM,CAAC;SACf;aAAM,IAAG,IAAI,CAAC,MAAM,GAAE,CAAC,EAAE;YACxB,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAChC,IAAI,MAAM,GAAG,IAAI,GAAG,MAAM,CAAC;YAC3B,OAAO,IAAI,CAAC;SACd;;YAAO,OAAO,IAAI,CAAC;IACtB,CAAC;IAfQ,UAAU;QAHtB,0DAAI,CAAC;YACJ,IAAI,EAAE,QAAQ;SACf,CAAC;;OACW,UAAU,CAiBtB;IAAD,iBAAC;CAAA;AAjBsB;;;;;;;;;;;;;;;;;;;ACPuC;AACH;AAM3D;IACE,oBAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAClD,CAAC;IAED,8BAAS,GAAT,UAAU,IAAY,EAAE,IAAS;QAC7B,OAAQ,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IANQ,UAAU;QAHtB,0DAAI,CAAC;YACJ,IAAI,EAAE,QAAQ;SACf,CAAC;+EAEoC,mEAAc;OADvC,UAAU,CAQtB;IAAD,iBAAC;CAAA;AARsB;;;;;;;;;;;;;;;;;;;ACPuC;AACH;AAM3D;IACE,uBAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAClD,CAAC;IAED,iCAAS,GAAT,UAAU,IAAY,EAAE,IAAS;QAC7B,OAAQ,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IANQ,aAAa;QAHzB,0DAAI,CAAC;YACJ,IAAI,EAAE,WAAW;SAClB,CAAC;+EAEoC,mEAAc;OADvC,aAAa,CAQzB;IAAD,oBAAC;CAAA;AARyB;;;;;;;;;;;;;;;;;;;ACPoC;AACH;AAM3D;IACE,wBAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAClD,CAAC;IAED,kCAAS,GAAT,UAAU,IAAY,EAAE,IAAS;QAC7B,OAAQ,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IANQ,cAAc;QAH1B,0DAAI,CAAC;YACJ,IAAI,EAAE,YAAY;SACnB,CAAC;+EAEoC,mEAAc;OADvC,cAAc,CAQ1B;IAAD,qBAAC;CAAA;AAR0B;;;;;;;;;;;;;;;;;;;;;;ACPgB;AACG;AACL;AAGS;AAC0C;AAU5F;IAUE,+BAAmB,IAAU,EAEhB,OAAgB;QAFV,SAAI,GAAJ,IAAI,CAAM;QAEhB,YAAO,GAAP,OAAO,CAAS;QAR7B,qBAAgB,GAAE,EAAE,CAAC;QACrB,wBAAmB,GAAE,EAAE,CAAC;QACxB,qBAAgB,GAAE,EAAE,CAAC;QACvB,qBAAqB;QACnB,wBAAmB,GAAE,EAAE,CAAC;QAKrB,IAAI,CAAC,GAAG,GAAG,+DAAW,CAAC,YAAY,CAAE;QACrC,IAAI,CAAC,oBAAoB,EAAE,CAAE;QAC7B,IAAI,CAAC,uBAAuB,EAAE,CAAE;QAChC,IAAI,CAAC,oBAAoB,EAAE,CAAE;QAC7B,IAAI,CAAC,uBAAuB,EAAE,CAAE;IACnC,CAAC;IAGD,mDAAmB,GAAnB,UAAqB,OAAY;QAC/B,IAAG,OAAO,IAAI,IAAI,EAAE;YAClB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACpC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,EAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACpF;IACH,CAAC;IAED,gDAAgB,GAAhB;QACI,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,EAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACnF,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,EAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACxF,CAAC;IAED,qDAAqB,GAArB,UAAsB,MAAM,EAAE,UAAU;QAEpC,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAG,CAAC,EAAE,EAAE;YAChD,IAAG,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;gBAC7C,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,GAAI,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;gBAC9D,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,UAAU,CAAC;gBAC7C,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;gBACpD,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;gBAChD,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;aACjD;SACJ;QACA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,EAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAExF,CAAC;IAEA,sDAAsB,GAAtB,UAAwB,OAAY;QAClC,IAAG,OAAO,IAAI,IAAI,EAAE;YAClB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACvC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,qBAAqB,EAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SAC1F;IACH,CAAC;IAEF,+CAAe,GAAf;QAEK,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,qBAAqB,EAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC9F,CAAC;IAEA,uDAAuB,GAAvB;QAAA,iBAMC;QALG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;YAC/E,IAAG,IAAI,EAAE;gBACF,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;aAC/B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oDAAoB,GAApB;QAAA,iBAOC;QANG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;YAC5E,IAAG,IAAI,EAAE;gBACF,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,sDAAsB,GAAtB;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,qBAAqB,CAAC,CAAC;IACzE,CAAC;IAID,mDAAmB,GAAnB;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,CAAC,CAAC;IACtE,CAAC;IAED,2CAAW,GAAX,UAAY,OAAY;QAAxB,iBA4BC;QAxBK,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAGhC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;gBAE3D,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;gBAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC;gBAC5C,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;gBAIpD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,GAAG,sBAAsB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;qBAC3F,SAAS,CAAC,aAAG;oBACZ,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;oBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;gBAEhB,CAAC,EAAE,UAAC,GAAG;oBACL,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YAET,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,CAAC;IAET,CAAC;IAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA+DE;IACA,8CAAc,GAAd,UAAgB,OAAY;QAA5B,iBA6BC;QAzBK,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAG9B,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;YAE7B,IAAG,OAAO,CAAC,OAAO,IAAI,SAAS,EAAC;gBAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,gFAAuB,CAAC,MAAM,CAAC,CAAC;aACnE;iBAAK;gBACF,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,gFAAuB,CAAC,MAAM,CAAC,CAAC;aAEnE;YACA,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;YAEpD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,GAAG,yBAAyB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;iBAC9F,SAAS,CAAC,aAAG;gBAEZ,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;YAEhB,CAAC,EAAE,UAAC,GAAG;gBACL,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QAET,CAAC,CAAC,CAAC;IAET,CAAC;IAGD,0CAAU,GAAV,UAAW,OAAe,EAAE,OAAe;QAA3C,iBAuBC;QArBE,IAAI,GAAG,CAAE;QAET,IAAG,OAAO,IAAI,SAAS,EAAE;YACtB,GAAG,GAAG,uDAAuD,CAAC;SAChE;aACI;YACF,GAAG,GAAG,+CAA+C,CAAC;SACxD;QAED,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAGnC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,OAAO,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC7B,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;YACtB,CAAC,EAAE,UAAC,GAAG;gBACL,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IAGL,CAAC;IAOD,mDAAmB,GAAnB,UAAqB,OAAY;QAC/B,IAAG,OAAO,IAAI,IAAI,EAAE;YAClB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACpC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,EAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACpF;IACH,CAAC;IAGF,qDAAqB,GAArB,UAAsB,MAAM,EAAE,UAAU;QAEpC,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAG,CAAC,EAAE,EAAE;YAChD,IAAG,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;gBAC7C,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,GAAI,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;gBAC9D,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,UAAU,CAAC;gBAC7C,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;gBACpD,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;gBAChD,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;aACjD;SACJ;QACA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,EAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAExF,CAAC;IAEA,sDAAsB,GAAtB,UAAwB,OAAY;QAClC,IAAG,OAAO,IAAI,IAAI,EAAE;YAClB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACvC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,qBAAqB,EAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SAC1F;IACH,CAAC;IAEF,+CAAe,GAAf;QAEK,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,qBAAqB,EAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC9F,CAAC;IAEA,uDAAuB,GAAvB;QAAA,iBAMC;QALG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;YAC/E,IAAG,IAAI,EAAE;gBACF,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;aAC/B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oDAAoB,GAApB;QAAA,iBAOC;QANG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;YAC5E,IAAG,IAAI,EAAE;gBACF,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,sDAAsB,GAAtB;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,qBAAqB,CAAC,CAAC;IACzE,CAAC;IAID,mDAAmB,GAAnB;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,CAAC,CAAC;IACtE,CAAC;IAED,yCAAS,GAAT,UAAU,IAAY,EAAE,OAAe;QAAvC,iBAuBC;QArBE,IAAI,GAAG,CAAE;QAET,IAAG,OAAO,IAAI,SAAS,EAAE;YACtB,GAAG,GAAG,qDAAqD,CAAC;SAC9D;aACI;YACF,GAAG,GAAG,6CAA6C,CAAC;SACtD;QAED,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAGnC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,IAAI,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC1B,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;YACtB,CAAC,EAAE,UAAC,GAAG;gBACL,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IAGL,CAAC;IA9UU,qBAAqB;QAJjC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAYyB,kDAAI;YAEP,sDAAO;OAZlB,qBAAqB,CAgVjC;IAAD,4BAAC;CAAA;AAhViC;;;;;;;;;;;;;;;;;;;;;;;AChBS;AACG;AACL;AAGS;AAEoC;AAG3B;AAW3D;IA6BE,6BAAmB,IAAU,EACP,cAA8B,EAAE,2CAA2C;IAC1F,OAAgB;QAFJ,SAAI,GAAJ,IAAI,CAAM;QACP,mBAAc,GAAd,cAAc,CAAgB;QAC7C,YAAO,GAAP,OAAO,CAAS;QA5BvB,gBAAW,GAAS;YACpB,mBAAmB,EAAE,EAAE;YACvB,iBAAiB,EAAE,EAAE;YACrB,eAAe,EAAE,EAAE;YACnB,WAAW,EAAE,EAAE;YACf,mBAAmB,EAAE,EAAE;YACvB,iBAAiB,EAAE,EAAE;YACrB,eAAe,EAAE,EAAE;YACnB,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;SACd,CAAC;QAEF,gBAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;QAEnC,mBAAc,GAAmB;YAC9B,QAAQ,EAAE,KAAK;YACf,UAAU,EAAE,KAAK;YACjB,YAAY,EAAE,IAAI;YAClB,YAAY,EAAE,KAAK;SAErB;QAGD,gBAAW,GAAE,EAAE,CAAC;QAChB,qBAAgB,GAAE,EAAE,CAAC;QAKjB,IAAI,CAAC,GAAG,GAAG,+DAAW,CAAC,YAAY,CAAE;QAEtC,IAAI,CAAC,eAAe,EAAE,CAAE;QACxB,IAAI,CAAC,oBAAoB,EAAE,CAAE;IAEhC,CAAC;IAED,4CAAc,GAAd,UAAe,WAAW;QAC5B;;;;;;;;;UASE;QACE,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,4CAAc,GAAd,UAAgB,OAAY;QAC1B,IAAG,OAAO,IAAI,IAAI,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC/E;IACH,CAAC;IAED,iDAAmB,GAAnB,UAAoB,OAAY;QAE5B,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,SAAS,EAAE;gBAClD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAE;aAChD;SACF;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAClF,CAAC;IAED,qDAAuB,GAAvB,UAAwB,GAAG;QACvB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,EAAE;gBAC5C,IAAG,GAAG,CAAC,OAAO,IAAI,CAAC,EAAE;oBAClB,IAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,QAAQ,EAAE;wBACzC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC;qBACrC;yBACI;wBACJ,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC;qBACrC;iBACJ;qBACI;oBACA,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;iBAC1C;gBACF,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAE;aAC5C;SACH;QAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjF,CAAC;IAED,2CAAa,GAAb,UAAe,KAAK;QAChB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACrF,iCAAiC;IACrC,CAAC;IAED,6CAAe,GAAf;QAAA,iBAWC;QAVK,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACrC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;gBAC5E,IAAG,IAAI,EAAE;oBACF,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;iBACvB;gBACD,OAAO,CAAC,CAAC,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;QAEH,CAAC,CAAC;IAEN,CAAC;IAIA,mDAAqB,GAArB;QAAA,iBAWA;QAVK,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACrC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;gBACnE,IAAG,IAAI,EAAE;oBACT,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;iBAC1B;gBACD,OAAO,CAAC,CAAC,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;QAEH,CAAC,CAAC;IAEN,CAAC;IAGD,4CAAc,GAAd,UAAe,OAAY,EAAE,EAAE;QAC7B,uEAAuE;QADzE,iBAyBC;QAtBA,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAG3B,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;gBAE3D,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;gBAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC;gBAC5C,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;gBAEpD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,GAAG,EAAE,EAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;qBACxE,SAAS,CAAC,aAAG;oBACZ,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;oBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;gBAEhB,CAAC,EAAE,UAAC,GAAG;oBACL,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YAET,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,CAAC;IAET,CAAC;IAED,8CAAgB,GAAhB,UAAiB,OAAO;QACtB,uEAAuE;QADzE,iBAyBC;QAtBA,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAG3B,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;gBAE3D,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;gBAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC;gBAC5C,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;gBAEpD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,GAAG,8BAA8B,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;qBACnG,SAAS,CAAC,aAAG;oBACZ,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;oBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;gBAEhB,CAAC,EAAE,UAAC,GAAG;oBACL,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YAET,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,CAAC;IAET,CAAC;IAED,iDAAmB,GAAnB,UAAqB,OAAY;QAC/B,IAAG,OAAO,IAAI,IAAI,EAAE;YAClB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACpC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,EAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACpF;IACH,CAAC;IAED,0CAAY,GAAZ;QACI,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,EAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC9F,CAAC;IAGD,kDAAoB,GAApB;QAAA,iBAUC;QATK,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACrC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;gBACrE,IAAG,IAAI,EAAE;oBACT,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;iBAC5B;gBACF,OAAO,CAAC,CAAC,CAAC,CAAC;YACZ,CAAC,CAAC,CAAC;QAEJ,CAAC,CAAC,CAAC;IACN,CAAC;IAED,iDAAmB,GAAnB;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,CAAC,CAAC;IACtE,CAAC;IAGF,8CAAgB,GAAhB;QACK,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,kBAAkB,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAE1F,CAAC;IAGA,6CAAe,GAAf,UAAiB,OAAY;QAA7B,iBA6BC;QAzBK,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAG9B,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;YAE7B,IAAG,OAAO,CAAC,OAAO,IAAI,SAAS,EAAC;gBAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,4EAAqB,CAAC,MAAM,CAAC,CAAC;aACjE;iBAAK;gBACF,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,4EAAqB,CAAC,MAAM,CAAC,CAAC;aAEjE;YACA,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;YAEpD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,GAAG,uBAAuB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;iBAC5F,SAAS,CAAC,aAAG;gBAEZ,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;YAEhB,CAAC,EAAE,UAAC,GAAG;gBACL,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QAET,CAAC,CAAC,CAAC;IAET,CAAC;IAED,gDAAkB,GAAlB;QAAA,iBAuBC;QApBK,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAG9B,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;YAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,4EAAqB,CAAC,MAAM,CAAC,CAAC;YAC9D,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;YAGpD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,GAAG,qBAAqB,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;iBACvE,SAAS,CAAC,aAAG;gBAEZ,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;YAEhB,CAAC,EAAE,UAAC,GAAG;gBACL,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QAET,CAAC,CAAC,CAAC;IAET,CAAC;IAGA,wCAAU,GAAV,UAAW,OAAe,EAAE,OAAe;QAA3C,iBAuBA;QArBE,IAAI,GAAG,CAAE;QAET,IAAG,OAAO,IAAI,SAAS,EAAE;YACtB,GAAG,GAAG,uDAAuD,CAAC;SAChE;aACI;YACF,GAAG,GAAG,+CAA+C,CAAC;SACxD;QAED,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAGnC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,OAAO,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC7B,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;YACtB,CAAC,EAAE,UAAC,GAAG;gBACL,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IAGL,CAAC;IAEA,qCAAO,GAAP,UAAQ,OAAe,EAAE,OAAe;QAAxC,iBAuBA;QArBE,IAAI,GAAG,CAAE;QAET,IAAG,OAAO,IAAI,SAAS,EAAE;YACtB,GAAG,GAAG,uDAAuD,CAAC;SAChE;aACI;YACF,GAAG,GAAG,+CAA+C,CAAC;SACxD;QAED,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAGnC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,OAAO,GAAC,OAAO,CAAC,CAAC,SAAS,CAAC,aAAG;gBACrC,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;YACtB,CAAC,EAAE,UAAC,GAAG;gBACL,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IAGL,CAAC;IAED,4CAAc,GAAd,UAAe,IAAI,EAAE,QAAQ,EAAE,MAAmB,EAAE,WAAW;QAC7D,IAAG,MAAM,CAAC,QAAQ,EAAE;YACpB,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC;SAC9C;QAED,IAAG,MAAM,CAAC,QAAQ,EAAE;YACpB,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC;SAC9C;QAED,OAAO,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IAGD,kDAAoB,GAApB,UAAqB,IAAI,EAAE,QAAQ,EAAE,WAAW;QAE/C,IAAI,WAAW,GAAgB;YAC5B,aAAa,EAAE,EAAE;YACjB,YAAY,EAAE,EAAE;SAClB,CAAC;QACC,IAAI,WAAW,CAAC,OAAO,IAAI,SAAS,EAAE;YACxC,WAAW,CAAC,aAAa,GAAG,WAAW,CAAC,iBAAiB,CAAC;SAC3D;aAAM;YACL,WAAW,CAAC,aAAa,GAAG,WAAW,CAAC,iBAAiB,CAAC;SAC3D;QAID,IAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE;YACnC,WAAW,CAAC,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,aAAa,CAAC,GAAG,IAAI,GAAG,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;SACjJ;aAAK,IAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE;YAEvC,WAAW,CAAC,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,IAAI,GAAG,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;SAC7I;aAAM;YACP,WAAW,CAAC,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,GAAG,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;SAErI;QACA,OAAO,WAAW,CAAC;IACpB,CAAC;IAED,kDAAoB,GAApB,UAAqB,IAAI,EAAE,QAAQ,EAAE,WAAW;QAE/C,IAAI,WAAW,GAAgB;YAC5B,aAAa,EAAE,EAAE;YACjB,YAAY,EAAE,EAAE;SAClB,CAAC;QACC,IAAI,WAAW,CAAC,OAAO,IAAI,SAAS,EAAE;YACxC,WAAW,CAAC,aAAa,GAAG,WAAW,CAAC,iBAAiB,CAAC;SAC3D;aAAM;YACL,WAAW,CAAC,aAAa,GAAG,WAAW,CAAC,iBAAiB,CAAC;SAC3D;QAGD,IAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE;YACnC,WAAW,CAAC,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,aAAa,CAAC,GAAG,IAAI,GAAG,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;SACjJ;aAAK,IAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE;YAEvC,WAAW,CAAC,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,IAAI,GAAG,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;SAC7I;aAAM;YACP,WAAW,CAAC,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,GAAG,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;SACrI;QAEA,OAAO,WAAW,CAAC;IACpB,CAAC;IAED,+CAAiB,GAAjB,UAAkB,IAAI,EAAE,UAAU,EAAC,aAAa,EAAE,SAAS,EAAE,QAAQ,EAAC,IAAI,EAAE,WAAuB,EAAE,WAAW;QAEhH,IAAG,WAAW,IAAI,IAAI,EACtB;YACE,KAAK,CAAC,iBAAiB,CAAC,CAAC;YACzB,OAAO;SACR;QAED,IAAI,aAAa,GAAG,WAAW,CAAC,aAAa,CAAC;QAE7C,IAAI,WAAW,CAAC,OAAO,IAAI,SAAS,EAAE;YACrC,IAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,EAAE,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBACtE,KAAK,CAAC,gCAAgC,CAAC,CAAC;gBACxC,OAAO;aACR;YACD,IAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,EAAE,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBACtE,KAAK,CAAC,gCAAgC,CAAC,CAAC;gBACxC,OAAO;aACR;SACF;aAAM;YACL,IAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,EAAE,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBACtE,KAAK,CAAC,gCAAgC,CAAC,CAAC;gBACxC,OAAO;aACR;YACD,IAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,EAAE,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBACtE,KAAK,CAAC,gCAAgC,CAAC,CAAC;gBACxC,OAAO;aACR;SACF;QAGD,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACjE,IAAI,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QAE/B,IAAI,EAAE,CAAC;QACP,IAAI,QAAQ,CAAC;QACb,IAAI;YACJ,EAAE,GAAG,IAAI,IAAI,CAAC,WAAW,EAAE;iBACtB,IAAI,CAAC,IAAI,CAAC;iBACV,EAAE,CAAC,CAAC,EAAC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,EAAC;gBAC7C,EAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC;iBAC3C,GAAG,CAAC,WAAW,CAAC;iBAChB,MAAM,CAAC,aAAa,CAAC;iBACrB,IAAI,CAAC,UAAU,CAAC,CAAC;YAEtB,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;SACxB;QAAC,OAAO,GAAG,EAAE;YAEZ,KAAK,CAAC,GAAG,CAAC,CAAC;SACZ;QAEA,OAAO,QAAQ,CAAC;IAClB,CAAC;IAGA,uCAAS,GAAT,UAAW,EAAE,EAAE,OAAe;QAA9B,iBAwCC;QAtCA,IAAI,MAAM,GAAG;YACZ,KAAK,EAAE,EAAE;SACT,CAAC;QAEF,IAAI,GAAG,CAAC;QAER,IAAG,OAAO,IAAI,SAAS,EAAE;YACpB,GAAG,GAAG,kDAAkD,CAAC;SAC3D;aACI;YACF,GAAG,GAAG,0CAA0C,CAAC;SACnD;QAKH,IAAI,IAAI,GAAI,GAAG,GAAG,SAAS,CAAC;QAC/B,6DAA6D;QAE1D,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAGzB,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;YAE5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;YAEpD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;iBAC7D,SAAS,CAAC,aAAG;gBAEZ,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;YAEhB,CAAC,EAAE,UAAC,GAAG;gBACL,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QAET,CAAC,CAAC,CAAC;IAET,CAAC;IApeU,mBAAmB;QAJ/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EA+ByB,kDAAI;YACS,mEAAc;YACpC,sDAAO;OA/BZ,mBAAmB,CAwe/B;IAAD,0BAAC;CAAA;AAxe+B","file":"default~pages-1pinvoice-tab1-module~pages-1pnote-tab3sending-module~pages-2pcontract-tab3sending-mod~31596d7a.js","sourcesContent":["\nexport const webtestnetconsumeconfig = {\n    apikey: \"ApiKey \"+'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmOTU0ODRjZGZkNWI5NmUwYjBiMTczMSIsImlhdCI6MTYwMzYxODkwMH0.Ax7KnnueIJq34q27M2ENSX0NtaVHBrL9KXvvXomEwjk'\n\n};\n\nexport const weblivenetconsumeconfig = {\n    apikey: \"ApiKey \"+'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmNjBjNTI0NDIxNGM1NDA1Yjc2NzZkOSIsImlhdCI6MTYwMDE3NzQ5NX0.ZCxij6Ou_9giZcwVo0ckMlf_Yx6PfkJ4wriEu8oEbrM'\n\n};\n","\nexport const webtestnetissueconfig = {\n    apikey: \"ApiKey \"+'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmOTU0ODE5ZGZkNWI5NmUwYjBiMTcyZiIsImlhdCI6MTYwMzYxODk2NX0.L7IzXID6cPrYoNXTXbJjxqIrAMFpocnU_rWFD1nxplc'\n\n};\n\nexport const weblivenetissueconfig = {\n    apikey: \"ApiKey \"+'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVjZTNhZjJjOGM0NDQzNTA4NWIzNWMxYiIsImlhdCI6MTU1ODQyNTM5N30.posE1NYwmggeEINT9PHhH6d2_E93ul0vyLjRp8Ywi9A'\n\n};\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Storage } from '@ionic/storage';\nimport {of as observableOf} from 'rxjs';\nimport {map, tap} from 'rxjs/operators';\nimport {environment} from '../config/environment';\nimport {webtestnetissueconfig, weblivenetissueconfig} from '../config/webissueconfig';\nimport { kycStatus } from '../models/kycstatus.model';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class KycService {\n  public token: any;\n  url: string ;\n\n  sendingmessages= [];\n  sendtransactions= [];\n \n   kycstatus: kycStatus = {\n    kycdone: '',\n    kycid: '',\n    googleid: '',\n    email: '',\n    statusaction: '',\n    statusmsg: '',\n\n  };\n \n\n  constructor(public http: Http, public storage: Storage) {\n      this.url = environment.hosteddomain ;\n\n  }\n  async getkycstatus() {\n     var xx = await this.reflectkycstatus() ;\n\n     return this.kycstatus;\n\n  }\n\n\n  reflectkycstatus() {\n       return new Promise((resolve, reject) => {\n      this.storage.get(environment.storageuniq+'kycstatus').then((data)=> {\n        if(data) {\n        this.kycstatus = data;\n        }\n        resolve(0);\n      });\n\n      })\n\n  }\n\n  registeruserkyc (details: any) {\n\n\n\n        return new Promise((resolve, reject) => {\n\n              this.storage.get(environment.storageuniq+'token').then((value) => {\n\n             this.token = value;\n             let headers = new Headers();\n             headers.append('Authorization', this.token);\n             headers.append('Content-Type', 'application/json');\n\n\n\n\n            this.http.post(this.url + '/webkycuser/registeruserkyc', JSON.stringify(details), {headers: headers})\n              .subscribe(res => {\n\n                let data = res.json();\n                resolve(data);\n\n              }, (err) => {\n                reject(err);\n              });\n\n        });\n        });\n\n  }\n\n  getkycdata ( details: any) {\n\n\n        return new Promise((resolve, reject) => {\n\n              this.storage.get(environment.storageuniq+'token').then((value) => {\n\n             this.token = value;\n             let headers = new Headers();\n             headers.append('Authorization', this.token);\n             headers.append('Content-Type', 'application/json');\n\n\n\n\n            this.http.post(this.url + '/webkycuser/getuserkyc', JSON.stringify(details), {headers: headers})\n              .subscribe(res => {\n\n                let data = res.json();\n                resolve(data);\n\n              }, (err) => {\n                reject(err);\n              });\n\n        });\n        });\n\n  }\n\n\n \n}\n","import {Injectable, Pipe, PipeTransform} from '@angular/core';\nimport { ChangellyCalls } from '../../providers/changelly';\n\n\n@Pipe({\n  name: 'FromSatoshi'\n})\n\nexport class FromSatoshiPipe implements PipeTransform {\n  constructor( public changellyCalls: ChangellyCalls) {\n  }\n\n  transform(item: number, args:any): number {\n    //console.log(comp.toLowerCase());\n      return  this.changellyCalls.fromSatoshi(item);\n    }\n\n}\n\n","import { NgModule } from '@angular/core';\n\n\nimport { FromSatoshiPipe } from './fromsatoshi'\nimport { ToFiatPipe } from './tofiat'\nimport { RedactPipe } from './redact'\nimport { ToFiatBtcPipe } from './tofiatbtc'\nimport { ToFiatDashPipe } from './tofiatdash'\n\nexport const pipes = [\n ToFiatPipe,\n RedactPipe,\n ToFiatBtcPipe,\n ToFiatDashPipe,\n    FromSatoshiPipe\n\n];\n\n@NgModule({\n  declarations:[pipes],\n  exports: [pipes]\n})\n\nexport class PipesModule { }\n\n","import {Injectable, Pipe, PipeTransform} from '@angular/core';\nimport { ChangellyCalls } from '../../providers/changelly';\n\n\n@Pipe({\n  name: 'Redact'\n})\nexport class RedactPipe implements PipeTransform {\n  constructor( ) {\n  }\n\n  transform(item: string, args: any): string {\n       if(item.length > 8) {\n         var str1 = item.substring(0, 4);  \n         var str2 = item.substring(8);  \n         var newstr = str1 + \"****\" + str2;\n         return newstr;\n       } else if(item.length >4) {\n         var str1 = item.substring(0, 4);  \n         var newstr = str1 + \"****\"; \n         return str1;\n      }  else return item;\n    }\n\n}\n\n","import {Injectable, Pipe, PipeTransform} from '@angular/core';\nimport { ChangellyCalls } from '../../providers/changelly';\n\n\n@Pipe({\n  name: 'ToFiat'\n})\nexport class ToFiatPipe implements PipeTransform {\n  constructor( public changellyCalls: ChangellyCalls) {\n  }\n\n  transform(item: number, args: any): number {\n      return  this.changellyCalls.toFiatBtc(item);\n    }\n\n}\n\n","import {Injectable, Pipe, PipeTransform} from '@angular/core';\nimport { ChangellyCalls } from '../../providers/changelly';\n\n\n@Pipe({\n  name: 'ToFiatBtc'\n})\nexport class ToFiatBtcPipe implements PipeTransform {\n  constructor( public changellyCalls: ChangellyCalls) {\n  }\n\n  transform(item: number, args: any): number {\n      return  this.changellyCalls.toFiatBtc(item);\n    }\n\n}\n\n","import {Injectable, Pipe, PipeTransform} from '@angular/core';\nimport { ChangellyCalls } from '../../providers/changelly';\n\n\n@Pipe({\n  name: 'ToFiatDash'\n})\nexport class ToFiatDashPipe implements PipeTransform {\n  constructor( public changellyCalls: ChangellyCalls) {\n  }\n\n  transform(item: number, args: any): number {\n      return  this.changellyCalls.toFiatDash(item);\n    }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Storage } from '@ionic/storage';\nimport {of as observableOf} from 'rxjs';\nimport {map, tap} from 'rxjs/operators';\nimport {environment} from '../config/environment';\nimport {webtestnetconsumeconfig, weblivenetconsumeconfig} from '../config/webconsumeconfig';\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class Blue011ConsumeService {\n  public token: any;\n  url: string ;\n\n  invoicedmessages= [];\n  invoicetransactions= [];\n  receivedmessages= [];\n//  transactions= [];\n  receivetransactions= [];\n\n  constructor(public http: Http, \n        \n        public storage: Storage) {\n     this.url = environment.hosteddomain ;\n     this.loadreceivedmessages() ;\n     this.loadreceivetransactions() ;\n     this.loadinvoicedmessages() ;\n     this.loadinvoicetransactions() ;\n  }\n\n\n  savereceivedmessage (details: any) {\n    if(details != null) {\n      this.receivedmessages.push(details);\n      this.storage.set(environment.storageuniq+'receivedmessages',this.receivedmessages);\n    }\n  }\n\n  deleteallmessage() {\n      this.receivedmessages.length = 0;\n      this.storage.set(environment.storageuniq+'receivedmessages',this.receivedmessages);\n      this.invoicedmessages.length = 0;\n      this.storage.set(environment.storageuniq+'invoicedmessages',this.invoicedmessages);\n }\n\n updatereceivedmessage(revert, transacted ) {\n\n     for(var i=0; i< this.receivedmessages.length ; i++) {\n         if(revert.pin == this.receivedmessages[i].pin) {\n           this.receivedmessages[i].id =  transacted.fromaddress.substr(-5);\n           this.receivedmessages[i].fromaddress = transacted.fromaddress;\n           this.receivedmessages[i].status = 'received';\n           this.receivedmessages[i].amount = transacted.amount;\n           this.receivedmessages[i].fees = transacted.fees;\n           this.receivedmessages[i].txid = transacted.txid;\n         }\n     }\n      this.storage.set(environment.storageuniq+'receivedmessages',this.receivedmessages);\n\n }\n\n  savereceivetransaction (details: any) {\n    if(details != null) {\n      this.receivetransactions.push(details);\n      this.storage.set(environment.storageuniq+'receivetransactions',this.receivetransactions);\n    }\n  }\n\n clearreceiveall() {\n\n      this.receivetransactions.length = 0;\n      this.storage.set(environment.storageuniq+'receivetransactions',this.receivetransactions);\n }\n\n  loadreceivetransactions() {\n      this.storage.get(environment.storageuniq+'receivetransactions').then((data)=> {\n\tif(data) {\n        this.receivetransactions = data;\n        }\n      });\n  }\n\n  loadreceivedmessages() {\n      this.storage.get(environment.storageuniq+'receivedmessages').then((data)=> {\n\tif(data) {\n        this.receivedmessages = data;\n        }\n      });\n\n  }\n\n  getreceivetransactions() {\n    return this.storage.get(environment.storageuniq+'receivetransactions');\n  }\n\n\n  \n  getreceivedmessages() {\n    return this.storage.get(environment.storageuniq+'receivedmessages');\n  }\n\n  registerwif(details: any) {\n\n\n\n        return new Promise((resolve, reject) => {\n\n\n           this.storage.get(environment.storageuniq+'token').then((value) => {\n\n             this.token = value;\n             let headers = new Headers();\n             headers.append('Authorization', this.token);\n             headers.append('Content-Type', 'application/json');\n\n\n\n            this.http.post(this.url + '/webuser/registerwif', JSON.stringify(details), {headers: headers})\n              .subscribe(res => {\n                let data = res.json();\n                resolve(data);\n\n              }, (err) => {\n                reject(err);\n              });\n\n        });\n        });\n\n  }\n\n/*\n  getkycdata(details: any) {\n\n\n\n        return new Promise((resolve, reject) => {\n\n\n             this.storage.get(environment.storageuniq+'token').then((value) => {\n\n             this.token = value;\n             let headers = new Headers();\n             headers.append('Authorization', this.token);\n             headers.append('Content-Type', 'application/json');\n\n\n\n\n            this.http.post(this.url + '/webuser/getkycdata', JSON.stringify(details), {headers: headers})\n              .subscribe(res => {\n                let data = res.json();\n                resolve(data);\n\n              }, (err) => {\n                reject(err);\n              });\n\n        });\n        });\n\n  }\n\n  consumemessage (details: any) {\n\n\n\n        return new Promise((resolve, reject) => {\n\n\n             let headers = new Headers();\n\n            if(details.network == 'testnet'){\n                headers.append('Authorization', webtestnetconsumeconfig.apikey);\n            }else {\n                headers.append('Authorization', weblivenetconsumeconfig.apikey);\n\n            }\n             headers.append('Content-Type', 'application/json');\n\n            this.http.post(this.url + '/blue011/consumemessage', JSON.stringify(details), {headers: headers})\n              .subscribe(res => {\n\n                let data = res.json();\n                resolve(data);\n\n              }, (err) => {\n                reject(err);\n              });\n\n        });\n\n  }\n\n*/\n  getconsumefees (details: any) {\n\n\n\n        return new Promise((resolve, reject) => {\n\n\n             let headers = new Headers();\n\n            if(details.network == 'testnet'){\n                headers.append('Authorization', webtestnetconsumeconfig.apikey);\n            }else {\n                headers.append('Authorization', weblivenetconsumeconfig.apikey);\n\n            }\n             headers.append('Content-Type', 'application/json');\n\n            this.http.post(this.url + '/blue011/getconsumefees', JSON.stringify(details), {headers: headers})\n              .subscribe(res => {\n\n                let data = res.json();\n                resolve(data);\n\n              }, (err) => {\n                reject(err);\n              });\n\n        });\n\n  }\n\n\n  getBalance(address: string, network: string): any {\n\n     var url ;\n\n     if(network == 'testnet') {\n        url = 'https://testnet-insight.dashevo.org/insight-api/addr/';\n     }\n     else {\n        url = 'https://insight.dashevo.org/insight-api/addr/';\n     }\n\n     return new Promise((resolve, reject) => {\n\n\n     this.http.get(url+address).subscribe(res => {\n                let data = res.json();\n                resolve(data);\n        }, (err) => {\n          reject(err);\n        });\n    });\n\n\n  }\n\n\n\n\n\n\n  saveinvoicedmessage (details: any) {\n    if(details != null) {\n      this.invoicedmessages.push(details);\n      this.storage.set(environment.storageuniq+'invoicedmessages',this.invoicedmessages);\n    }\n  }\n\n\n updateinvoicedmessage(revert, transacted ) {\n\n     for(var i=0; i< this.invoicedmessages.length ; i++) {\n         if(revert.pin == this.invoicedmessages[i].pin) {\n           this.invoicedmessages[i].id =  transacted.fromaddress.substr(-5);\n           this.invoicedmessages[i].fromaddress = transacted.fromaddress;\n           this.invoicedmessages[i].status = 'invoiced';\n           this.invoicedmessages[i].amount = transacted.amount;\n           this.invoicedmessages[i].fees = transacted.fees;\n           this.invoicedmessages[i].txid = transacted.txid;\n         }\n     }\n      this.storage.set(environment.storageuniq+'invoicedmessages',this.invoicedmessages);\n\n }\n\n  saveinvoicetransaction (details: any) {\n    if(details != null) {\n      this.invoicetransactions.push(details);\n      this.storage.set(environment.storageuniq+'invoicetransactions',this.invoicetransactions);\n    }\n  }\n\n clearinvoiceall() {\n\n      this.invoicetransactions.length = 0;\n      this.storage.set(environment.storageuniq+'invoicetransactions',this.invoicetransactions);\n }\n\n  loadinvoicetransactions() {\n      this.storage.get(environment.storageuniq+'invoicetransactions').then((data)=> {\n\tif(data) {\n        this.invoicetransactions = data;\n        }\n      });\n  }\n\n  loadinvoicedmessages() {\n      this.storage.get(environment.storageuniq+'invoicedmessages').then((data)=> {\n\tif(data) {\n        this.invoicedmessages = data;\n        }\n      });\n\n  }\n\n  getinvoicetransactions() {\n    return this.storage.get(environment.storageuniq+'invoicetransactions');\n  }\n\n\n  \n  getinvoicedmessages() {\n    return this.storage.get(environment.storageuniq+'invoicedmessages');\n  }\n\n  verifydoc(txid: string, network: string): any {\n\n     var url ;\n\n     if(network == 'testnet') {\n        url = 'https://testnet-insight.dashevo.org/insight-api/tx/';\n     }\n     else {\n        url = 'https://insight.dashevo.org/insight-api/tx/';\n     }\n\n     return new Promise((resolve, reject) => {\n\n\n     this.http.get(url+txid).subscribe(res => {\n                let data = res.json();\n                resolve(data);\n        }, (err) => {\n          reject(err);\n        });\n    });\n\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Storage } from '@ionic/storage';\nimport {of as observableOf} from 'rxjs';\nimport {map, tap} from 'rxjs/operators';\nimport {environment} from '../config/environment';\nimport {Incomeshare} from '../models/incomeshare.model';\nimport {webtestnetissueconfig, weblivenetissueconfig} from '../config/webissueconfig';\nimport { Networkfees } from '../models/networkfees.model';\nimport { Sendusechoice } from '../models/senduserchoice.model';\nimport { ChangellyCalls } from '../../providers/changelly';\n\n\n\n\ndeclare var dashcore;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class Blue011IssueService {\n  public token: any;\n  url: string ;\n  feesdisplay : any = {\n  stddiscountfeesdisp: '',\n  stdgalaxyfeesdisp: '',\n  stdstarfeesdisp: '',\n  stdfeesdisp: '',\n  rvtdiscountfeesdisp: '',\n  rvtgalaxyfeesdisp: '',\n  rvtstarfeesdisp: '',\n  rvtfeesdisp: '',\n  networkfees: '',\n  };\n\n  Transaction = dashcore.Transaction;\n\n  senduserchoice : Sendusechoice = {\n     starplan: false,\n     galaxyplan: false,\n     standardplan: true, \n     discountplan: false \n\n  }\n\n\n  userrecords= [];\n  sendtransactions= [];\n\n  constructor(public http: Http, \n                 public changellyCalls: ChangellyCalls, // , .toSatoshi(this.policydata[i].amount))\n\t\tpublic storage: Storage) {\n      this.url = environment.hosteddomain ;\n\n     this.loaduserrecords() ;\n     this.loadsendtransactions() ;\n\n  }\n\n  getdisplayfees(useraccount) {\n/*\n    this.feesdisplay.stdgalaxyfeesdisp =  \"DASH \" + this.changellyCalls.fromSatoshi(Number(useraccount.galaxyfees.stdfixed)) + Number(useraccount.galaxyfees.stdpercentage) + \"%\"; \n    this.feesdisplay.stdstarfeesdisp =  \"DASH \" + this.changellyCalls.fromSatoshi(Number(useraccount.starfees.stdfixed)) + Number(useraccount.starfees.stdpercentage) + \"%\"; \n    this.feesdisplay.stdfeesdisp =  \"DASH \" + this.changellyCalls.fromSatoshi(Number(useraccount.fees.stdfixed)) + Number(useraccount.fees.stdpercentage) + \"%\"; \n    this.feesdisplay.stddiscountdisp =  \"DASH \" + this.changellyCalls.fromSatoshi(Number(useraccount.discount.stdfixed)) + Number(useraccount.discount.stdpercentage) + \"%\"; \n    this.feesdisplay.rvtgalaxyfeesdisp =  \"DASH \" + this.changellyCalls.fromSatoshi(Number(useraccount.galaxyfees.rvtfixed)) + Number(useraccount.galaxyfees.rvtpercentage) + \"%\"; \n    this.feesdisplay.rvtstarfeesdisp =  \"DASH \" + this.changellyCalls.fromSatoshi(Number(useraccount.starfees.rvtfixed)) + Number(useraccount.starfees.rvtpercentage) + \"%\"; \n    this.feesdisplay.rvtfeesdisp =  \"DASH \" + this.changellyCalls.fromSatoshi(Number(useraccount.fees.rvtfixed)) + Number(useraccount.fees.rvtpercentage) + \"%\"; \n    this.feesdisplay.rvtdiscountdisp =  \"DASH \" + this.changellyCalls.fromSatoshi(Number(useraccount.discount.rvtfixed)) + Number(useraccount.discount.rvtpercentage) + \"%\"; \n*/\n    return this.feesdisplay;\n  }\n\n  saveuserrecord (details: any) {\n    if(details != null) {\n      this.userrecords.push(details);\n      this.storage.set(environment.storageuniq+'issueuserrecords',this.userrecords);\n    }\n  }\n\n  oldupdateuserrecord(details: any) {\n\n      for(var i=0; i< this.userrecords.length; i++) {\n        if(this.userrecords[i].address == details.toaddress) {\n           this.userrecords[i].status = 'funded';\n           this.userrecords[i].balance = details.amount ;\n        }\n      }\n      this.storage.set(environment.storageuniq+'issueuserrecords',this.userrecords);\n  }\n\n  balanceupdateuserrecord(msg) {\n      for(var i=0; i< this.userrecords.length; i++) {\n        if(this.userrecords[i].address == msg.address) {\n           if(msg.balance == 0) {\n              if(this.userrecords[i].status == 'funded') {\n                this.userrecords[i].status = 'spent';\n               }\n               else {\n                this.userrecords[i].status = 'empty';\n               }\n           }\n           else {\n                this.userrecords[i].status = 'funded';\n           }\n          this.userrecords[i].balance = msg.balance ;\n        }\n     }\n\n     this.storage.set(environment.storageuniq+'issueuserrecords',this.userrecords);\n  } \n\n  deletemessage (index) {\n      this.userrecords.splice(index, 1);\n      return this.storage.set(environment.storageuniq+'issueuserrecords',this.userrecords);\n      //return this.loaduserrecords() ;\n  }\n\n  loaduserrecords() {\n        return new Promise((resolve, reject) => {\n      this.storage.get(environment.storageuniq+'issueuserrecords').then((data)=> {\n\tif(data) {\n        this.userrecords = data;\n        }\n        resolve(0);\n      });\n\n      })\n\n  }\n\n  \n \n   reflectsenduserchoice() {\n        return new Promise((resolve, reject) => {\n      this.storage.get(environment.storageuniq+'senduserchoice').then((data)=> {\n        if(data) {\n        this.senduserchoice = data;\n        }\n        resolve(0);\n      });\n\n      })\n\n  }\n\n  \n  getuserrecords(details: any, mi) {\n    // return this.storage.get(environment.storageuniq+'issueuserrecords');\n\n   return new Promise((resolve, reject) => {\n\n\n           this.storage.get(environment.storageuniq+'token').then((value) => {\n\n             this.token = value;\n             let headers = new Headers();\n             headers.append('Authorization', this.token);\n             headers.append('Content-Type', 'application/json');\n\n            this.http.post(this.url + mi , JSON.stringify(details), {headers: headers})\n              .subscribe(res => {\n                let data = res.json();\n                resolve(data);\n\n              }, (err) => {\n                reject(err);\n              });\n\n        });\n        });\n\n  }\n\n  updateuserrecord(details) {\n    // return this.storage.get(environment.storageuniq+'issueuserrecords');\n\n   return new Promise((resolve, reject) => {\n\n\n           this.storage.get(environment.storageuniq+'token').then((value) => {\n\n             this.token = value;\n             let headers = new Headers();\n             headers.append('Authorization', this.token);\n             headers.append('Content-Type', 'application/json');\n\n            this.http.post(this.url + '/webuser/webupdateuserrecord', JSON.stringify(details), {headers: headers})\n              .subscribe(res => {\n                let data = res.json();\n                resolve(data);\n\n              }, (err) => {\n                reject(err);\n              });\n\n        });\n        });\n\n  }\n\n  savesendtransaction (details: any) {\n    if(details != null) {\n      this.sendtransactions.push(details);\n      this.storage.set(environment.storageuniq+'sendtransactions',this.sendtransactions);\n    }\n  }\n\n  clearsentall() {\n      this.sendtransactions.length = 0;\n      return this.storage.set(environment.storageuniq+'sendtransactions',this.sendtransactions);\n  }\n\n\n  loadsendtransactions() {\n        return new Promise((resolve, reject) => {\n      this.storage.get(environment.storageuniq+'sendtransactions').then((data)=> {\n        if(data) {\n        this.sendtransactions = data;\n        }\n       resolve(0);\n      });\n\n     });\n  }\n\n  getsenttransactions() {\n    return this.storage.get(environment.storageuniq+'sendtransactions');\n  }\n\n\n deleteallmessage() {\n      this.userrecords.length = 0;\n      return this.storage.set(environment.storageuniq+'issueuserrecords',this.userrecords);\n\n }\n\n\n  issueuserrecord (details: any) {\n\n\n\n        return new Promise((resolve, reject) => {\n\n\n             let headers = new Headers();\n\n            if(details.network == 'testnet'){\n                headers.append('Authorization', webtestnetissueconfig.apikey);\n            }else {\n                headers.append('Authorization', weblivenetissueconfig.apikey);\n\n            }\n             headers.append('Content-Type', 'application/json');\n\n            this.http.post(this.url + '/blue011/issuemessage', JSON.stringify(details), {headers: headers})\n              .subscribe(res => {\n\n                let data = res.json();\n                resolve(data);\n\n              }, (err) => {\n                reject(err);\n              });\n\n        });\n\n  }\n\n  getissuedaddresses () {\n\n\n        return new Promise((resolve, reject) => {\n\n\n             let headers = new Headers();\n             headers.append('Authorization', webtestnetissueconfig.apikey);\n             headers.append('Content-Type', 'application/json');\n\n\n            this.http.post(this.url + '/getissuedaddresses', null, {headers: headers})\n              .subscribe(res => {\n\n                let data = res.json();\n                resolve(data);\n\n              }, (err) => {\n                reject(err);\n              });\n\n        });\n\n  }\n\n\n   getBalance(address: string, network: string): any {\n\n     var url ;\n\n     if(network == 'testnet') {\n        url = 'https://testnet-insight.dashevo.org/insight-api/addr/';\n     }\n     else {\n        url = 'https://insight.dashevo.org/insight-api/addr/';\n     }\n\n     return new Promise((resolve, reject) => {\n\n\n     this.http.get(url+address).subscribe(res => {\n                let data = res.json();\n                resolve(data);\n        }, (err) => {\n          reject(err);\n        });\n    });\n\n\n  }\n\n   getUtxo(address: string, network: string): any {\n\n     var url ;\n\n     if(network == 'testnet') {\n        url = 'https://testnet-insight.dashevo.org/insight-api/addr/';\n     }\n     else {\n        url = 'https://insight.dashevo.org/insight-api/addr/';\n     }\n\n     return new Promise((resolve, reject) => {\n\n\n     this.http.get(url+address+\"/utxo\").subscribe(res => {\n                let data = res.json();\n                resolve(data);\n        }, (err) => {\n          reject(err);\n        });\n    });\n\n\n  }\n\n  getnetworkfees(type, toamount, change: Networkfees, useraccount) {\n    if(change.increase) {\n    return (Number(useraccount.networkfees) + 500);\n    }\n\n    if(change.decrease) {\n    return (Number(useraccount.networkfees) - 500);\n    }\n\n    return Number(useraccount.networkfees);\n  }\n\n\n  getdirectincomeshare(type, toamount, useraccount) {\n\n   var incomeshare: Incomeshare = {\n      incomeaddress: '',\n      incomeamount: ''\n   };\n      if( useraccount.network == 'livenet') {\n    incomeshare.incomeaddress = useraccount.liveincomeaddress;\n  } else {\n    incomeshare.incomeaddress = useraccount.testincomeaddress;\n  }\n\n\n\n  if(this.senduserchoice.galaxyplan) {\n  incomeshare.incomeamount = ((Number(useraccount.galaxyfees.stdpercentage) * 0.01 * toamount + Number(useraccount.galaxyfees.stdfixed)).toFixed());\n  }else if(this.senduserchoice.starplan) {\n\n  incomeshare.incomeamount = ((Number(useraccount.starfees.stdpercentage) * 0.01 * toamount + Number(useraccount.starfees.stdfixed)).toFixed());\n  } else {\n  incomeshare.incomeamount = ((Number(useraccount.fees.stdpercentage) * 0.01 * toamount + Number(useraccount.fees.stdfixed)).toFixed());\n\n  }\n   return incomeshare;\n  }\n\n  getrevertincomeshare(type, toamount, useraccount) {\n\n   var incomeshare: Incomeshare = {\n      incomeaddress: '',\n      incomeamount: ''\n   };\n      if( useraccount.network == 'livenet') {\n    incomeshare.incomeaddress = useraccount.liveincomeaddress;\n  } else {\n    incomeshare.incomeaddress = useraccount.testincomeaddress;\n  }\n\n\n  if(this.senduserchoice.galaxyplan) {\n  incomeshare.incomeamount = ((Number(useraccount.galaxyfees.rvtpercentage) * 0.01 * toamount + Number(useraccount.galaxyfees.rvtfixed)).toFixed());\n  }else if(this.senduserchoice.starplan) {\n\n  incomeshare.incomeamount = ((Number(useraccount.starfees.rvtpercentage) * 0.01 * toamount + Number(useraccount.starfees.rvtfixed)).toFixed());\n  } else {\n  incomeshare.incomeamount = ((Number(useraccount.fees.rvtpercentage) * 0.01 * toamount + Number(useraccount.fees.rvtfixed)).toFixed());\n  }\n\n   return incomeshare;\n  }\n\n  createtransaction(utxo, privatekey,changeaddress, toaddress, toamount,fees, incomeshare:Incomeshare, useraccount) {\n\n  if(useraccount == null) \n  {\n    alert(\"Setup not ready\");\n    return;\n  }\n\n  var incomeaddress = incomeshare.incomeaddress;\n\n   if( useraccount.network == 'livenet') {\n    if(!dashcore.Address.isValid(incomeaddress, dashcore.Networks.livenet)) {\n      alert(\"Invalid address internal error\");\n      return;\n    }\n    if(!dashcore.Address.isValid(changeaddress, dashcore.Networks.livenet)) {\n      alert(\"Invalid address internal error\");\n      return;\n    }\n  } else {\n    if(!dashcore.Address.isValid(incomeaddress, dashcore.Networks.testnet)) {\n      alert(\"Invalid address internal error\");\n      return;\n    }\n    if(!dashcore.Address.isValid(changeaddress, dashcore.Networks.testnet)) {\n      alert(\"Invalid address internal error\");\n      return;\n    }\n  }\n\n\n  var income = Number(Number(incomeshare.incomeamount).toFixed(0));\n  var networkfees = Number(fees);\n\n  var tx; \n  var txobject; \n  try {\n  tx = new this.Transaction()\n      .from(utxo)\n      .to([{address: incomeaddress, satoshis: income},\n        {address: toaddress, satoshis: toamount}])\n      .fee(networkfees)\n      .change(changeaddress)\n      .sign(privatekey);\n\n  txobject = tx.toBuffer();\n  } catch (err) {\n\n    alert(err);\n  } \n\n   return txobject;\n }\n\n\n  broadcast( tx, network: string) {\n \n   var pushtx = { \n    rawtx: tx\n   };  \n\n   var url;\n\n   if(network == 'testnet') {\n        url = 'https://testnet-insight.dashevo.org/insight-api/';\n     }\n     else {\n        url = 'https://insight.dashevo.org/insight-api/';\n     }\n\n\n\n \n   var lurl =  url + 'tx/send';\n// 'https://testnet-insight.dashevo.org/insight-api/tx/send';\n\n   return new Promise((resolve, reject) => {\n\n\n             let headers = new Headers();\n\n             headers.append('Content-Type', 'application/json');\n\n            this.http.post(lurl, JSON.stringify(pushtx), {headers: headers})\n              .subscribe(res => {\n\n                let data = res.json();\n                resolve(data);\n\n              }, (err) => {\n                reject(err);\n              });\n\n        });\n\n  }\n\n\n \n}\n"],"sourceRoot":""}