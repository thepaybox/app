{"version":3,"sources":["webpack:///./src/app/pages/config/webconsumeconfig.ts","webpack:///./src/app/pages/negotiate/dashaccept/dashaccept.ts","webpack:///./src/app/pages/negotiate/dashaccept/mydeals-list-routing.module.ts","webpack:///./src/app/pages/negotiate/dashaccept/mydeals-list.html","webpack:///./src/app/pages/negotiate/dashaccept/mydeals-list.module.ts","webpack:///./src/app/pages/negotiate/dashaccept/mydeals-list.scss","webpack:///./src/app/pages/negotiate/dashaccept/mydeals-list.ts","webpack:///./src/app/pages/negotiate/dashaccept/mydeals.service.ts","webpack:///./src/app/pages/negotiate/dashaccept/search.service.ts"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAO,IAAM,uBAAuB,GAAG;IACnC,MAAM,EAAE,SAAS,GAAC,sJAAsJ;CAE3K,CAAC;AAEK,IAAM,uBAAuB,GAAG;IACnC,MAAM,EAAE,SAAS,GAAC,sJAAsJ;CAE3K,CAAC;;;;;;;;;;;;;ACTF;AAAA;AAAO,IAAM,UAAU,GAAE;IACzB,sEAAsE;IAClE,QAAQ,EAAE;QACd;;;;;;;;;;;;;;;;;;;;;;;;;UAyBE;QACK;YACC,SAAS,EAAE,OAAO;YACtB,WAAW,EAAE,oFAAoF;YACjG,UAAU,EAAE,iIAAiI;YAC7I,KAAK,EAAE,+CAA+C;YACtD,KAAK,EAAE,sBAAsB;YAC7B,WAAW,EAAE,QAAQ;YACrB,eAAe,EAAE,QAAQ;YACzB,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,EAAE;YACT,UAAU,EAAE,6BAA6B;YACzC,UAAU,EAAE,SAAS;YACrB,UAAU,EAAE,WAAW;YACvB,cAAc,EAAE,sBAAsB;YACtC,cAAc,EAAE,wBAAwB;YACjC,IAAI,EAAE,uBAAuB;YAChC,WAAW,EAAE;gBACjB,WAAW,EAAE,QAAQ;gBACrB,KAAK,EAAE,QAAQ;gBACf,WAAW,EAAE,QAAQ;aACd;SACH;QACD;YACC,SAAS,EAAE,SAAS;YACxB,WAAW,EAAE,8DAA8D;YAC3E,UAAU,EAAE,gKAAgK;YAC5K,KAAK,EAAE,yCAAyC;YAChD,KAAK,EAAE,oCAAoC;YAC3C,WAAW,EAAE,QAAQ;YACrB,eAAe,EAAE,QAAQ;YACzB,IAAI,EAAE,MAAM;YACZ,UAAU,EAAE,gCAAgC;YAC5C,UAAU,EAAE,SAAS;YACrB,UAAU,EAAE,WAAW;YACvB,cAAc,EAAE,sBAAsB;YACtC,cAAc,EAAE,wBAAwB;YACjC,IAAI,EAAE,6BAA6B;YACtC,WAAW,EAAE;gBACjB,WAAW,EAAE,QAAQ;gBACrB,KAAK,EAAE,QAAQ;gBACf,WAAW,EAAE,QAAQ;aACd;SACH;QACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAiFE;QACK;YACC,SAAS,EAAE,SAAS;YACxB,WAAW,EAAE,8CAA8C;YAC3D,UAAU,EAAE,0FAA0F;YACtG,KAAK,EAAE,wCAAwC;YAC/C,KAAK,EAAE,cAAc;YACrB,WAAW,EAAE,QAAQ;YACrB,eAAe,EAAE,QAAQ;YACzB,IAAI,EAAE,MAAM;YACZ,UAAU,EAAE,oBAAoB;YAChC,UAAU,EAAE,aAAa;YACzB,UAAU,EAAE,YAAY;YACxB,cAAc,EAAE,cAAc;YAC9B,cAAc,EAAE,gBAAgB;YACzB,IAAI,EAAE,8BAA8B;YACvC,WAAW,EAAE;gBACjB,WAAW,EAAE,QAAQ;gBACrB,KAAK,EAAE,QAAQ;gBACf,WAAW,EAAE,QAAQ;aACd;SACH;KACF;IACF,KAAK,EAAE,YAAY;CACtB,CAAC;;;;;;;;;;;;;;;;;;;;ACjLuC;AACc;AAEN;AACjD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAe;KAC3B;CACF,CAAC;AAMF;IAAA;IAA2C,CAAC;IAA/B,4BAA4B;QAJxC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,4BAA4B,CAAG;IAAD,mCAAC;CAAA;AAAH;;;;;;;;;;;;ACfzC,2gCAA2gC,+BAA+B,gRAAgR,gBAAgB,k0J;;;;;;;;;;;;;;;;;;;;;;ACAjyC;AACM;AACF;AACA;AAGI;AAC4B;AAW7E;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAT7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,yFAA4B;aAC7B;YACD,YAAY,EAAE,CAAC,6DAAe,CAAC;SAChC,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;AClB9B,2BAA2B,wBAAwB,EAAE,oBAAoB,iBAAiB,kBAAkB,2BAA2B,EAAE,oCAAoC,sBAAsB,EAAE,0CAA0C,sBAAsB,EAAE,qCAAqC,mBAAmB,eAAe,EAAE,kBAAkB,gCAAgC,uBAAuB,EAAE,iBAAiB,+BAA+B,uBAAuB,EAAE,SAAS,uBAAuB,EAAE,kBAAkB,wCAAwC,wBAAwB,EAAE,eAAe,wCAAwC,wBAAwB,EAAE,+CAA+C,2pD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7pB;AACpB;AAEgB;AACO;AACT;AACN;AAGwB;AAErB;AACH;AACP;AACW;AACA;AACiB;AACJ;AAWlE;IAsCE,yBACS,eAAsC,EACrC,UAA6B,EAC9B,eAAgC,EAC/B,QAAyB,EAE1B,YAA0B,EAC1B,OAAgB,EAChB,eAAgC,EAC/B,cAA8B,EAE/B,aAA4B,EAC5B,gBAAkC;IAE7C,yDAAyD;IAC7C,KAAqB,EACtB,MAAc;QAhBvB,iBAiCC;QAhCQ,oBAAe,GAAf,eAAe,CAAuB;QACrC,eAAU,GAAV,UAAU,CAAmB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAC/B,aAAQ,GAAR,QAAQ,CAAiB;QAE1B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,YAAO,GAAP,OAAO,CAAS;QAChB,oBAAe,GAAf,eAAe,CAAiB;QAC/B,mBAAc,GAAd,cAAc,CAAgB;QAE/B,kBAAa,GAAb,aAAa,CAAe;QAC5B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAGjC,UAAK,GAAL,KAAK,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAQ;QArDvB,aAAQ,GAAU,EAAE,CAAC;QACrB,cAAS,GAAU,EAAE,CAAC;QAKtB,gBAAW,GAAS;YACjB,WAAW,EAAE,IAAI;YACjB,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;YACf,kBAAkB,EAAE,OAAO;SAC7B,CAAE;QAEH,iBAAY,GAAS;YACf,GAAG,EAAE,EAAE;YACP,WAAW,EAAE,EAAE;YACf,QAAQ,EAAG,EAAE;YACb,WAAW,EAAE,EAAE;YACf,KAAK,EAAE,EAAE;YACT,aAAa,EAAE,EAAE;SAClB,CAAC;QAEN,mBAAc,GAAQ;YACtB,EAAE,EAAE,EAAE;YACN,cAAc,EAAE,EAAE;SACjB,CAAC;QAKF,YAAO,GAAG,gEAAW,CAAC,OAAO,CAAC;QAC9B,iBAAY,GAAG,gEAAW,CAAC,YAAY,CAAC;QACxC,0BAAqB,GAAG,gEAAW,CAAC,qBAAqB,CAAC;QAC1D,kBAAa,GAAG,EAAE,CAAC;QAsBlB,IAAI,CAAC,QAAQ,GAAG,sDAAU,CAAC,QAAQ,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,iBAAiB,EAAE,CAAE;QAE9B,0CAA0C;QAErC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,gEAAW,CAAC,WAAW,GAAC,eAAe,CAAC,CAAC,IAAI,CAAC,cAAI;YAChE,IAAG,IAAI,EAAE;gBACT,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aACzB;iBAAM;gBACP,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;aACvB;QACJ,CAAC,CAAC,CAAC;QAEN,IAAI,CAAC,SAAS,EAAE,CAAE;IAClB,CAAC;IAED,mCAAS,GAAT;QAAA,iBAOD;QANC,IAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC,YAAE;YAClD,IAAG,EAAE,EAAE;gBACP,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aACpC;QACF,CAAC,CAAC,CAAC;IAEL,CAAC;IAEO,iCAAO,GAAb;;;;;;wBACC,SAAI;wBAAgB,qBAAM,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE;;wBAAjE,GAAK,YAAY,GAAG,SAA6C,CAAC;wBAClE,IAAI,CAAC,SAAS,EAAE,CAAE;;;;;KAClB;IAEK,kCAAQ,GAAd;;;;;;wBACC,SAAI;wBAAgB,qBAAM,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE;;wBAAjE,GAAK,YAAY,GAAG,SAA6C,CAAC;;;;;KAClE;IAED,2CAAiB,GAAjB;QAAA,iBAcD;QAZC,IAAI,IAAI,GAAG,EACV,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAE;YACzD,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YACzB,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,gEAAW,CAAC,WAAW,GAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAE,CAAC;QAEjF,CAAC,EAAE,UAAC,GAAG;YACN,KAAI,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,wBAAwB,CAAC,CAAC;QAEvD,CAAC,CAAC,CAAC;IAEJ,CAAC;IAGC,0CAAgB,GAAhB;QACA,IAAI,CAAC,QAAQ,EAAE,CAAE;QACjB,IAAI,CAAC,UAAU,EAAE,CAAE;IAEnB,CAAC;IAEK,qCAAW,GAAjB;;;;;;wBACC,SAAI;wBAAe,qBAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE;;wBAA/D,GAAK,WAAW,GAAG,SAA4C,CAAC;;;;;KAChE;IAEM,oCAAU,GAAhB;;;;;;;wBAEA,SAAI;wBAAgB,qBAAM,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE;;wBAAjE,GAAK,YAAY,GAAG,SAA6C,CAAC;wBAElE,IAAG,CAAC,IAAI,CAAC,YAAY,EAAE;4BACrB,sBAAO;yBACR;wBAEG,IAAI,GAAG;4BACT,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG;yBAC9B,CAAC;wBAEF,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAK;4BACjD,IAAG,KAAK,EAAE;gCACV,KAAI,CAAC,WAAW,GAAG,KAAK;6BACvB;wBACH,CAAC,CAAC,CAAE,KAAK,CAAC,UAAC,IAAI;wBAEhB,CAAC,CAAC,CAAC;wBAAA,CAAC;wBAAA,CAAC;;;;;KAGJ;IAGD,kCAAQ,GAAR;QAEA,IAAI,CAAC,QAAQ,EAAE,CAAE;QACjB,IAAI,CAAC,UAAU,EAAE,CAAE;IACnB,CAAC;IAEH,qCAAW,GAAX;IACA,CAAC;IAIE,qCAAW,GAAX;IACA,CAAC;IAED,wCAAc,GAAd;QAEH;;;;;;;;;;;;;;;;;;;;;UAqBE;IAEC,CAAC;IAED,gCAAM,GAAN;QAAA,iBAKA;QAJC,IAAI,CAAC,UAAU,EAAE,CAAE;QACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;YAChC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC;IACJ,CAAC;IAEA,+BAAK,GAAL;QACG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IAC1C,CAAC;IAGD,yCAAe,GAAf;QACG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,QAAQ,GAAC,IAAI,CAAC,QAAQ,EAAE,8BAA8B,CAAE,CAAC;IAC5F,CAAC;IAEK,sCAAY,GAAlB;;;;;;;wBAEC,SAAI;wBAAgB,qBAAM,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE;;wBAAjE,GAAK,YAAY,GAAG,SAA6C,CAAC;wBAG7D,IAAI,GAAG;4BACV,OAAO,EAAE,IAAI,CAAC,OAAO;4BACrB,WAAW,EAAE,MAAM;4BACnB,KAAK,EAAE,IAAI,CAAC,YAAY,EAAC,KAAI,CAAC,YAAY,CAAC,KAAK,EAAC,CAAC,IAAI;4BACtD,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAC,KAAI,CAAC,YAAY,CAAC,GAAG,EAAC,CAAC,IAAI;4BACvD,KAAK,EAAE,IAAI,CAAC,WAAW,EAAC,KAAI,CAAC,WAAW,CAAC,KAAK,EAAC,CAAC,IAAI;4BACpD,QAAQ,EAAE,IAAI,CAAC,QAAQ;yBACxB,CAAC;wBAEF,IAAG,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;4BACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;4BACvC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,gEAAW,CAAC,WAAW,GAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;4BAC9E,IAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;gCAC/B,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,mBAAmB,CAAG,CAAC;gCACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;6BACxC;yBAEF;wBAED,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,WAAgB;4BAExD,KAAI,CAAC,eAAe,EAAE,CAAE;wBAEzB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,IAAI;4BAET,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;4BAC3B,IAAI,GAAG,CAAE;4BACN,IAAI;gCACP,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;6BACzB;4BAAC,OAAM,IAAI,EAAE;6BAEb;4BACJ,IAAG,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE;gCACxB,KAAI,CAAC,YAAY,CAAC,sBAAsB,EAAE,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAK,EAAE,CAAE,CAAC;6BAExE;iCAAM;gCACL,KAAI,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,wBAAwB,CAAE,CAAC;6BACtD;4BAID,qBAAqB;wBACtB,CAAC,CAAC;;;;;KAEJ;IAEO,sCAAY,GAAlB,UAAmB,KAAK,EAAE,SAAS,EAAE,OAAO;;;;;;4BAC5B,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,MAAM,EAAE,KAAK;4BACb,SAAS,EAAE,SAAS;4BACpB,OAAO,EAAE,OAAO;4BAChB,OAAO,EAAE,CAAC,IAAI,CAAC;yBAChB,CAAC;;wBALI,KAAK,GAAG,SAKZ;wBAEF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;wBACtB,UAAU,CAAE;;;4CACV,qBAAM,KAAK,CAAC,OAAO,EAAE;;wCAArB,SAAqB,CAAC;;;;6BACxB,EAAE,IAAI,CAAC,CAAC;;;;;KAET;IAED,oCAAU,GAAV;QAAA,iBAUC;QATI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,gEAAW,CAAC,WAAW,GAAC,cAAc,EAAC,IAAI,CAAC,CAAC,IAAI,CAAC,WAAC;YACnE,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;QAAA,CAAC;QAEP,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,gEAAW,CAAC,WAAW,GAAC,aAAa,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,YAAE;YAClE,KAAI,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,CAAC;QAE/C,CAAC,CAAC,CAAC;QAAA,CAAC;IAEL,CAAC;IAnRU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,kHAAgC;;SAEjC,CAAC;+EAwC0B,oEAAqB;YACzB,iFAAiB;YACb,8DAAe;YACrB,mEAAe;YAEZ,6EAAY;YACjB,sDAAO;YACC,gEAAe;YACf,2EAAc;YAEhB,6DAAa;YACV,+EAAgB;YAG1B,8DAAc;YACd,sDAAM;OAtDZ,eAAe,CAqR3B;IAAD,sBAAC;CAAA;AArR2B;;;;;;;;;;;;;;;;;;;;;AC5Be;AACG;AACL;AAIY;AAOrD;IAQE,yBAAmB,IAAU,EAAS,OAAgB;QAAnC,SAAI,GAAJ,IAAI,CAAM;QAAS,YAAO,GAAP,OAAO,CAAS;QALtD,WAAM,GAAG,+BAA+B,CAAC;QACzC,cAAS,GAAG,yDAAyD,CAAC;QACtE,cAAS,GAAG,QAAQ,CAAC;QAIpB,IAAI,CAAC,GAAG,GAAG,+DAAW,CAAC,YAAY,CAAE;IAEtC,CAAC;IAED,oDAA0B,GAA1B,UAA4B,OAAY;QAAxC,iBA0BC;QAvBK,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAE9B,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;gBAE7D,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;gBAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC;gBAC5C,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;gBAGpD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,GAAG,6BAA6B,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;qBAClG,SAAS,CAAC,aAAG;oBAEZ,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;oBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;gBAEhB,CAAC,EAAE,UAAC,GAAG;oBACL,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YAET,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,CAAC;IAET,CAAC;IACD,oCAAU,GAAV,UAAY,OAAY;QAAxB,iBA0BC;QAvBK,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAE9B,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;gBAE7D,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;gBAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC;gBAC5C,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;gBAGpD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,GAAG,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;qBAClF,SAAS,CAAC,aAAG;oBAEZ,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;oBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;gBAEhB,CAAC,EAAE,UAAC,GAAG;oBACL,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YAET,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,CAAC;IAET,CAAC;IAED,oCAAU,GAAV,UAAY,OAAY;QAAxB,iBA0BC;QAvBK,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAE9B,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;gBAE7D,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;gBAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC;gBAC5C,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;gBAGpD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,GAAG,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;qBAClF,SAAS,CAAC,aAAG;oBAEZ,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;oBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;gBAEhB,CAAC,EAAE,UAAC,GAAG;oBACL,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YAET,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,CAAC;IAET,CAAC;IAID,qCAAW,GAAX,UAAa,OAAY;QAAzB,iBA0BC;QAvBK,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAE9B,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;gBAE7D,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;gBAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC;gBAC5C,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;gBAGpD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,GAAG,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;qBACtF,SAAS,CAAC,aAAG;oBAEZ,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;oBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;gBAEhB,CAAC,EAAE,UAAC,GAAG;oBACL,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YAET,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,CAAC;IAET,CAAC;IA5HU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EASyB,kDAAI,EAAkB,sDAAO;OAR3C,eAAe,CAyM3B;IAAD,sBAAC;CAAA;AAzM2B;;;;;;;;;;;;;;;;;;;;;ACbe;AACG;AACL;AAIY;AAQrD;IAQE,uBAAmB,IAAU,EAAS,OAAgB;QAAnC,SAAI,GAAJ,IAAI,CAAM;QAAS,YAAO,GAAP,OAAO,CAAS;QALtD,WAAM,GAAG,+BAA+B,CAAC;QACzC,cAAS,GAAG,yDAAyD,CAAC;QACtE,cAAS,GAAG,aAAa,CAAC;QAIxB,IAAI,CAAC,GAAG,GAAG,+DAAW,CAAC,YAAY,CAAE;IAEvC,CAAC;IAID,sCAAc,GAAd,UAAgB,OAAY;QAA5B,iBA2BC;QAxBK,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAEjC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;gBAE/C,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBAEnB,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;gBAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC;gBAExD,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;gBAEnD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,GAAG,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;qBACtF,SAAS,CAAC,aAAG;oBAEZ,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;oBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;gBAEhB,CAAC,EAAE,UAAC,GAAG;oBACL,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YACT,CAAC,CAAC,CAAC;QAEH,CAAC,CAAC,CAAC;IAET,CAAC;IAED,uCAAe,GAAf,UAAiB,OAAY;QAA7B,iBA0BC;QAvBK,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAE9B,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;gBAE7D,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;gBAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC;gBAC5C,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;gBAGpD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,GAAG,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;qBACvF,SAAS,CAAC,aAAG;oBAEZ,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;oBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;gBAEhB,CAAC,EAAE,UAAC,GAAG;oBACL,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YAET,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,CAAC;IAET,CAAC;IAID,mCAAW,GAAX,UAAa,OAAY;QAAzB,iBA0BC;QAvBK,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAE9B,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+DAAW,CAAC,WAAW,GAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;gBAE7D,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;gBAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC;gBAC5C,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;gBAGpD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,GAAG,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;qBACtF,SAAS,CAAC,aAAG;oBAEZ,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;oBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;gBAEhB,CAAC,EAAE,UAAC,GAAG;oBACL,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YAET,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,CAAC;IAET,CAAC;IApGU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EASyB,kDAAI,EAAkB,sDAAO;OAR3C,aAAa,CAiLzB;IAAD,oBAAC;CAAA;AAjLyB","file":"dashaccept-mydeals-list-module.js","sourcesContent":["\nexport const webtestnetconsumeconfig = {\n    apikey: \"ApiKey \"+'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmOTU0ODRjZGZkNWI5NmUwYjBiMTczMSIsImlhdCI6MTYwMzYxODkwMH0.Ax7KnnueIJq34q27M2ENSX0NtaVHBrL9KXvvXomEwjk'\n\n};\n\nexport const weblivenetconsumeconfig = {\n    apikey: \"ApiKey \"+'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmNjBjNTI0NDIxNGM1NDA1Yjc2NzZkOSIsImlhdCI6MTYwMDE3NzQ5NX0.ZCxij6Ou_9giZcwVo0ckMlf_Yx6PfkJ4wriEu8oEbrM'\n\n};\n","export const Dashscreen= {\n// Don't change order of products. They are hardcoded in various pages\n    products: [\n/*\n       {\n        productid: 'BLUE021',\n\t   description: 'The blockchain based controlling and controlled element, provides ability to use blockchain to perform multi-part contract execution',\n\t   howitworks: 'A blockchain contract is created with multiparty control features like OTP based control. Then each of the party can execute control over the execution of contract, by providing OTP to convey their decision.',\n\t   title: 'Multi-party control of blockchain execution (BLUE021)',\n\t   scope: 'Multi-party contracts ',\n\t   companyname: 'ahahah',\n\t   downloadsamples: 'ahahah',\n\t   fees: 'Free',\n           deal: 'Compare with other smart contracts',\n\t   navigation: 'solution-multiparty',\n\t   controller: 'Controllers',\n\t   controlled: 'Controlled',\n\t   controllerlist: 'myissuerlist',\n\t   controlledlist: 'myconsumerlist',\n        productdata: {\n\t   description: 'The blockchain based controlling and controlled element, provides ability to use blockchain to perform multi-part contract execution',\n\t   howitworks: 'A blockchain contract is created with multiparty control features like OTP based control. Then each of the party can execute control over the execution of contract, by providing OTP to convey their decision.',\n\t   title: 'Multi-party control of blockchain execution',\n\t   companyname: 'ahahah',\n\t   downloadsamples: 'ahahah',\n\t   fees: 'Free',\n          } \n       },\n*/\n       {\n        productid: 'main1',\n\t   description: 'Download your dash accept address to send DASH crypto without fear of losing it.  ',\n\t   howitworks: 'A DASH blockchain contract is created with secret control PIN. Then receiving the party can execute contract, by providing PIN.',\n\t   title: 'A Blockchain address control system (BLUE011)',\n\t   scope: 'Accept DASH payment ',\n\t   companyname: 'ahahah',\n\t   downloadsamples: 'ahahah',\n\t   fees: 'Free',\n\t   email: '',\n\t   navigation: 'blue011/solution-messagepay',\n\t   controller: 'Issuers',\n\t   controlled: 'Consumers',\n\t   controllerlist: 'blue011/myissuerlist',\n\t   controlledlist: 'blue011/myconsumerlist',\n           deal: 'Enhanced ATM solution',\n        productdata: {\n\t   description: 'ahahah',\n\t   title: 'ahahah',\n\t   companyname: 'ahahah',\n          }, \n       },\n       {\n        productid: 'BLUE012',\n\t   description: 'The accept blockchain address that can used to send payments',\n\t   howitworks: 'A accept blockchain address is created, which unlocks with message and PIN. The sender sends this message and PIN to receiver. The sender can accept any time.',\n\t   title: 'Revertable blockchain address (BLUE012)',\n\t   scope: 'Revertable, DASH address, payment ',\n\t   companyname: 'ahahah',\n\t   downloadsamples: 'ahahah',\n\t   fees: 'Free',\n\t   navigation: 'blue012/solution-revertaddress',\n\t   controller: 'Issuers',\n\t   controlled: 'Consumers',\n\t   controllerlist: 'blue012/myissuerlist',\n\t   controlledlist: 'blue012/myconsumerlist',\n           deal: 'Revertable crypto payments ',\n        productdata: {\n\t   description: 'ahahah',\n\t   title: 'ahahah',\n\t   companyname: 'ahahah',\n          }, \n       },\n/*\n       {\n        productid: 'BLUE031',\n\t   description: 'The blockchain based controlling and controlled element, provides ability to use blockchain to issue coupon and redeem coupon ',\n\t   howitworks: 'A blockchain contract is created for coupon with secret PIN. Then receiver of coupon can execute contract, by providing Coupon with PIN.',\n\t   title: 'Coupon control on blockchain (BLUE031)',\n\t   scope: 'Loyalty solutions, instant settlement ',\n\t   companyname: 'ahahah',\n\t   downloadsamples: 'ahahah',\n\t   fees: 'Free',\n\t   navigation: 'solution-coupon',\n\t   controller: 'Controllers',\n\t   controlled: 'Controlled',\n\t   controllerlist: 'myissuerlist',\n\t   controlledlist: 'myconsumerlist',\n        productdata: {\n\t   description: 'ahahah',\n\t   title: 'ahahah',\n\t   companyname: 'ahahah',\n          }, \n       },\n       {\n        productid: 'BLUE041',\n\t   description: 'The blockchain based escrow creation and execution. ',\n\t   howitworks: 'A blockchain contract for escrow is created with multiple PINs. The escrow owner  can execute contract, on fulfillment of escrow term.',\n\t   title: 'Escrow control on blockchain (BLUE041)',\n\t   scope: 'Creating escrow on blockchain ',\n\t   companyname: 'ahahah',\n\t   downloadsamples: 'ahahah',\n\t   fees: 'Free',\n\t   navigation: 'solution-escrow',\n\t   controller: 'Controllers',\n\t   controlled: 'Controlled',\n\t   controllerlist: 'myissuerlist',\n\t   controlledlist: 'myconsumerlist',\n        productdata: {\n\t   description: 'ahahah',\n\t   title: 'ahahah',\n\t   companyname: 'ahahah',\n          }, \n       },\n       {\n        productid: 'BLUE051',\n\t   description: 'The blockchain based device execution control . ',\n\t   howitworks: 'A blockchain contract for device, which may need one of parameters like location, userid, OTP . On providing proper data the contract is executed. ',\n\t   title: 'Device control on blockchain (BLUE051)',\n\t   scope: 'Locking, unlocking devices on blockchain ',\n\t   companyname: 'ahahah',\n\t   downloadsamples: 'ahahah',\n\t   fees: 'Free',\n\t   navigation: 'solution-device',\n\t   controller: 'Controllers',\n\t   controlled: 'Controlled',\n\t   controllerlist: 'myissuerlist',\n\t   controlledlist: 'myconsumerlist',\n        productdata: {\n\t   description: 'ahahah',\n\t   title: 'ahahah',\n\t   companyname: 'ahahah',\n          }, \n       }, \n       {\n        productid: 'BLUE061',\n\t   description: 'The blockchain based delayed execution control for temprory offline system. ',\n\t   howitworks: 'A blockchain contract for delayed execution for device without internet. ',\n\t   title: 'Device control on blockchain (BLUE061)',\n\t   scope: 'Offline execution ',\n\t   companyname: 'ahahah',\n\t   downloadsamples: 'ahahah',\n\t   fees: 'Free',\n\t   navigation: 'solution-device',\n\t   controller: 'Controllers',\n\t   controlled: 'Controlled',\n\t   controllerlist: 'myissuerlist',\n\t   controlledlist: 'myconsumerlist',\n        productdata: {\n\t   description: 'ahahah',\n\t   title: 'ahahah',\n\t   companyname: 'ahahah',\n          }, \n       },\n*/\n       {\n        productid: 'BLUE012',\n\t   description: 'The blockchain based greet and gift system. ',\n\t   howitworks: 'A blockchain contract with greeting in blockchain and money can be gifted to receiver . ',\n\t   title: 'Greet and Gift on blockchain (BLUE012)',\n\t   scope: 'Greet, Gift ',\n\t   companyname: 'ahahah',\n\t   downloadsamples: 'ahahah',\n\t   fees: 'Free',\n\t   navigation: 'solution-greetgift',\n\t   controller: 'Controllers',\n\t   controlled: 'Controlled',\n\t   controllerlist: 'myissuerlist',\n\t   controlledlist: 'myconsumerlist',\n           deal: 'Greet and Gift on blockchain',\n        productdata: {\n\t   description: 'ahahah',\n\t   title: 'ahahah',\n\t   companyname: 'ahahah',\n          }, \n       },\n     ],\n    token: 'GATYUUUIII',\n};\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MydealsListPage } from './mydeals-list';\nconst routes: Routes = [\n  {\n    path: '',\n    component: MydealsListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MydealsListPageRoutingModule {}\n","module.exports = \"<ion-header>\\n<ion-toolbar>\\n\\n\\n\\n\\n\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button ></ion-menu-button>\\n    </ion-buttons>\\n        <ion-title>\\n            <ion-label  >The pay box</ion-label>\\n        </ion-title>\\n\\n\\n        <ion-buttons slot=\\\"secondary\\\">\\n            <ion-button  [disabled]=\\\"loggedinuser.uid ==''\\\" (click)=\\\"refresh()\\\">\\n                Refresh\\n            </ion-button>\\n            <ion-button  *ngIf=\\\"loggedinuser.uid ==''\\\" (click)=\\\"login()\\\">\\n                Login\\n            </ion-button>\\n            <ion-button  *ngIf=\\\"loggedinuser.uid !=''\\\" (click)=\\\"logout()\\\">\\n                Logout\\n            </ion-button>\\n        </ion-buttons>\\n\\n    </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content class=\\\"outer-content\\\">\\n  <ion-item >\\n       <ion-label class=\\\"ion-text-wrap\\\">\\n      <ion-text color=\\\"primary\\\">\\n        <h3> Default template  </h3>\\n      </ion-text>\\n      <ion-text color=\\\"secondary\\\">\\n      <p *ngIf=\\\"defaultinvoice.id != ''\\\"  >  {{defaultinvoice.templatenumber}}  </p>\\n      <p *ngIf=\\\"defaultinvoice.id == ''\\\"  >  Default template not set   </p>\\n      </ion-text>\\n    </ion-label>\\n </ion-item >\\n\\n  <ion-list>\\n  \\n    <ion-card class=\\\"offering-card\\\">\\n            <ion-card-header text-center>\\n         <ion-card-title>  {{product1.scope}} </ion-card-title>\\n<ion-icon name=\\\"heart\\\" slot=\\\"end\\\" color=\\\"danger\\\" size=\\\"small\\\" class=\\\"icon-heart\\\" (click)=\\\"likecompany()\\\"></ion-icon>\\n\\n            </ion-card-header>\\n\\n            <ion-card-content>\\n\\n\\n        <ion-item   text-center>\\n <ion-badge slot=\\\"start\\\">1.1</ion-badge>\\n\\n          <ion-label  position=\\\"stacked\\\"> Email client to receive payment </ion-label>\\n      <ion-input placeholder=\\\"Enter email-id\\\" [(ngModel)]=\\\"webemail\\\" name=\\\"email\\\" type=\\\"email\\\" required>\\n        </ion-input>\\n\\n\\n        </ion-item  >\\n        <ion-item   text-center>\\n <ion-badge slot=\\\"start\\\">1.2</ion-badge>\\n <ion-label position=\\\"stacked\\\"> Enter message to client below </ion-label>\\n\\n       <ion-textarea rows=\\\"4\\\" class=\\\"ion-text-wrap\\\" type=\\\"text\\\" [(ngModel)]=\\\"webemail\\\"\\n                          placeholder=\\\"Enter message to client \\\"></ion-textarea>\\n\\n\\n        </ion-item  >\\n        <ion-item  text-center>\\n <ion-badge slot=\\\"start\\\">1.3</ion-badge>\\n        <ion-grid>\\n        <ion-row>\\n        <ion-col>\\n        <ion-item  text-center>\\n     <ion-label padding-bottom position=\\\"stacked\\\"> Enter invoice number below </ion-label>\\n         <ion-input  [(ngModel)]=\\\"webemail\\\" placeholder=\\\"Enter invoice number \\\"></ion-input>\\n\\n        </ion-item  >\\n        </ion-col>\\n        <ion-col>\\n        <ion-item  text-center>\\n     <ion-label padding-bottom position=\\\"stacked\\\"> Enter amount in USD below </ion-label>\\n         <ion-input  [(ngModel)]=\\\"webemail\\\" placeholder=\\\"Enter amount \\\"></ion-input>\\n        </ion-item  >\\n        </ion-col>\\n        </ion-row>\\n        </ion-grid>\\n        </ion-item>\\n        <ion-item text-center>\\n <ion-badge slot=\\\"start\\\">1.4</ion-badge>\\n        <ion-label>\\n        <ion-button  clear size=\\\"small\\\" color=\\\"primary\\\" (click)=\\\"websendemail()\\\" > Submit  </ion-button>\\n        </ion-label>\\n        </ion-item>\\n     <ion-item text-center>\\n    The client will receive a DASH address to make payment\\n<ion-icon name=\\\"heart\\\" slot=\\\"end\\\" color=\\\"danger\\\" size=\\\"small\\\" class=\\\"icon-heart\\\" (click)=\\\"likecompany()\\\"></ion-icon>\\n  </ion-item>\\n            </ion-card-content>\\n   </ion-card>\\n\\n\\n        <ion-item   text-center>\\n        </ion-item  >\\n  \\n    <ion-card class=\\\"offering-card\\\">\\n            <ion-card-header text-center>\\n         <ion-card-title>  How it works  </ion-card-title>\\n<ion-icon name=\\\"heart\\\" slot=\\\"end\\\" color=\\\"danger\\\" size=\\\"small\\\" class=\\\"icon-heart\\\" (click)=\\\"likecompany()\\\"></ion-icon>\\n\\n            </ion-card-header>\\n\\n            <ion-card-content>\\n\\n        <ion-item   >\\n      1. Set the DASH wallet address to receive payment\\n        </ion-item  >\\n\\n        <ion-item   >\\n      2. Send a unique DASH address to client to make payment\\n        </ion-item  >\\n        <ion-item   >\\n      3. Client pays \\n        </ion-item  >\\n        <ion-item   >\\n      4. The payment will be credited to your DASH wallet \\n        </ion-item  >\\n        <ion-item   >\\n      5. Convert DASH to USD in the exchange of your choice\\n        </ion-item  >\\n\\n\\n        <ion-item  text-center>\\n\\n          <ion-label  class=\\\"blueborleft\\\" text-wrap>\\n          <h4>\\n          You can send DASH accept address by email or whatsapp.\\n          </h4>\\n          </ion-label>\\n        </ion-item>\\n     <ion-item text-center>\\n    The DASH accept address uses DASH Blockchain \\n<ion-icon name=\\\"heart\\\" slot=\\\"end\\\" color=\\\"danger\\\" size=\\\"small\\\" class=\\\"icon-heart\\\" (click)=\\\"likecompany()\\\"></ion-icon>\\n  </ion-item>\\n            </ion-card-content>\\n   </ion-card>\\n\\n        <ion-item  >\\n        </ion-item  >\\n\\n\\n    <ion-card class=\\\"offering-card\\\">\\n            <ion-card-header>\\n         <ion-card-title>  Earn by partnering </ion-card-title>\\n<ion-icon name=\\\"heart\\\" slot=\\\"end\\\" color=\\\"danger\\\" size=\\\"small\\\" class=\\\"icon-heart\\\" (click)=\\\"likecompany()\\\"></ion-icon>\\n\\n         <ion-card-subtitle>  Certifying, validating documents on Blockchain </ion-card-subtitle>\\n            </ion-card-header>\\n\\n            <ion-card-content>\\n\\n\\n        <ion-item  >\\n\\n          <ion-label   class=\\\"blueborleft\\\" text-wrap>\\n                       <h4> <span slot=\\\"start\\\"> Partnering opportunities </span>\\n         <ion-icon align=\\\"right\\\" name=\\\"heart-empty\\\"  color=\\\"clear\\\" size=\\\"small\\\" class=\\\"icon-heart\\\" (click)=\\\"likeproduct()\\\"></ion-icon> </h4>\\n            <p>\\n          Partner for Escrow, certifying documents on blockchain\\n            </p>\\n          <h4>\\n          Contact: partner@thepaybox.com \\n          </h4>\\n          </ion-label>\\n        </ion-item>\\n     <ion-item>\\n    REST-API integration   \\n<ion-icon name=\\\"heart\\\" slot=\\\"end\\\" color=\\\"danger\\\" size=\\\"small\\\" class=\\\"icon-heart\\\" (click)=\\\"likecompany()\\\"></ion-icon>\\n  </ion-item>\\n            </ion-card-content>\\n   </ion-card>\\n\\n\\n\\n\\n\\n\\n  </ion-list>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { MydealsListPage } from './mydeals-list';\nimport { MydealsListPageRoutingModule } from './mydeals-list-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    MydealsListPageRoutingModule\n  ],\n  declarations: [MydealsListPage],\n})\nexport class MydealsListModule {}\n","module.exports = \".scroll {\\n  background: #ededed; }\\n\\n.offering-card {\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column; }\\n\\n.offering-card ion-card-header {\\n  padding: 4px 16px; }\\n\\n.offering-card ion-card-header .item {\\n  padding: 4px 16px; }\\n\\n.offering-card ion-card-content {\\n  flex: 1 1 auto;\\n  padding: 0; }\\n\\n.blueborleft {\\n  border-left: 2px solid blue;\\n  padding-left: 10px; }\\n\\n.redborleft {\\n  border-left: 2px solid red;\\n  padding-left: 10px; }\\n\\ndiv {\\n  font-size: 0.875em; }\\n\\nion-textarea {\\n  background: var(--ion-color-medium);\\n  border-radius: 20px; }\\n\\nion-input {\\n  background: var(--ion-color-medium);\\n  border-radius: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JhbWVzaC93b3Jrc3BhY2UyMC90aGVwYXlib3guZ2l0aHViLmlvL3NyYy9hcHAvcGFnZXMvbmVnb3RpYXRlL2Rhc2hhY2NlcHQvbXlkZWFscy1saXN0LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxvQkFBbUIsRUFDcEI7O0FBRUQ7RUFDRSxhQUFZO0VBQ1osY0FBYTtFQUNiLHVCQUFzQixFQUN2Qjs7QUFFRDtFQUNFLGtCQUFpQixFQUNsQjs7QUFFRDtFQUNFLGtCQUFpQixFQUNsQjs7QUFFRDtFQUNFLGVBQWM7RUFFZCxXQUFVLEVBQ1g7O0FBRUQ7RUFDSSw0QkFBMkI7RUFDM0IsbUJBQWtCLEVBQ3JCOztBQUVEO0VBQ0ksMkJBQTBCO0VBQzFCLG1CQUFrQixFQUNyQjs7QUFHRDtFQUFNLG1CQUFrQixFQUFJOztBQUc1QjtFQUNJLG9DQUFtQztFQUNuQyxvQkFBbUIsRUFDdEI7O0FBR0Q7RUFDSSxvQ0FBbUM7RUFDbkMsb0JBQW1CLEVBQ3RCIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbmVnb3RpYXRlL2Rhc2hhY2NlcHQvbXlkZWFscy1saXN0LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2Nyb2xsIHtcbiAgYmFja2dyb3VuZDogI2VkZWRlZDtcbn1cblxuLm9mZmVyaW5nLWNhcmQge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5vZmZlcmluZy1jYXJkIGlvbi1jYXJkLWhlYWRlciB7XG4gIHBhZGRpbmc6IDRweCAxNnB4O1xufVxuXG4ub2ZmZXJpbmctY2FyZCBpb24tY2FyZC1oZWFkZXIgLml0ZW0ge1xuICBwYWRkaW5nOiA0cHggMTZweDtcbn1cblxuLm9mZmVyaW5nLWNhcmQgaW9uLWNhcmQtY29udGVudCB7XG4gIGZsZXg6IDEgMSBhdXRvO1xuXG4gIHBhZGRpbmc6IDA7XG59XG5cbi5ibHVlYm9ybGVmdCAge1xuICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgYmx1ZTtcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG59XG5cbi5yZWRib3JsZWZ0ICB7XG4gICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCByZWQ7XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xufVxuXG5cbmRpdiB7IGZvbnQtc2l6ZTogMC44NzVlbTsgfSAvLyAxNHB4IFxuXG5cbmlvbi10ZXh0YXJlYSB7XG4gICAgYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLW1lZGl1bSk7XG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcbn1cblxuXG5pb24taW5wdXQge1xuICAgIGJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1tZWRpdW0pO1xuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XG59XG4iXX0= */\"","import { Component, ViewEncapsulation } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { InAppBrowser } from '@ionic-native/in-app-browser/ngx';\nimport { ActionSheetController } from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\n\n\nimport { Blue011WebService } from '../../tab4wallet/blue011.web.service';\n\nimport { MysearchService } from './mydeals.service';\nimport { SearchService } from './search.service';\nimport { Dashscreen } from './dashaccept';\nimport {environment} from '../../config/environment';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { TermsuserService } from '../../termspage/terms-user.service';\nimport { InvoiceService } from '../../tab4wallet/invoice.service';\n\n\n\n\n\n@Component({\n  selector: 'page-mydeals-list',\n  templateUrl: 'mydeals-list.html',\n  styleUrls: ['./mydeals-list.scss'],\n})\nexport class MydealsListPage {\n  products: any[] = [];\n  products1: any[] = [];\n  productid : string;\n  productjson : any;\n  product1 : any;\n\n  useraccount : any = {\n     termsagreed: 'no',\n     testaddress: '',\n     liveaddress: '',\n     safetyconfirmation: 'false'\n  } ;\n\n  loggedinuser : any = {\n        uid: '',\n        displayName: '',\n        photoURL : '',\n        phoneNumber: '',\n        email: '',\n        emailVerified: ''\n      };\n\n  defaultinvoice : any ={\n  id: '',\n  templatenumber: ''\n  };\n\n  userid : string;\n  webemail : string;\n  productqueryText: string;\n  network = environment.network;\n  downloadlink = environment.downloadlink;\n  playstoredownloadlink = environment.playstoredownloadlink;\n  anonymoususer = [];\n\n  companyqueryText: string;\n\n  constructor(\n    public actionSheetCtrl: ActionSheetController,\n    private blue011web: Blue011WebService,\n    public alertController: AlertController,\n    private fireauth: AngularFireAuth, \n\n    public inAppBrowser: InAppBrowser,\n    public storage: Storage,\n    public mysearchservice: MysearchService,\n    private invoiceservice: InvoiceService,\n\n    public searchservice: SearchService,\n    public termsuserservice: TermsuserService,\n\n//    private productcreateservice: ProductCreateService,\n    private route: ActivatedRoute,\n    public router: Router\n  ) {\n   this.products = Dashscreen.products;\n   this.product1 = this.products[0];\n    this.getdefaultsetting() ;\n\n//   this.products1 = Dashscreen.products;\n\n     this.storage.get(environment.storageuniq+'anonymoususer').then(data=> {\n        if(data) {\n        this.anonymoususer = data;\n        } else {\n        this.anonymoususer = [];\n        }\n     });\n\n  this.getdefinv() ;\n  }\n\n  getdefinv() {\n  this.invoiceservice.getdefaultinvtemplate().then(xx =>{\n   if(xx) {\n   this.defaultinvoice = JSON.parse(xx);\n   }\n  });\n\n}\n\n  async refresh() {\n   this.loggedinuser = await this.termsuserservice.getloggedinuser();\n   this.getdefinv() ;\n  }\n\n  async loaduser() {\n   this.loggedinuser = await this.termsuserservice.getloggedinuser();\n  }\n\n  getdefaultsetting() {\n\n  var data = {\n  };\n\n  this.invoiceservice.webgetdefaultinvtemplate(data).then(xx=>{\n   this.defaultinvoice = xx;\n   this.storage.set(environment.storageuniq+'defaulttemplate', JSON.stringify(xx) );\n\n   }, (err) => {\n    this.presentAlert(\"\", \"\", \"Error default setting.\");\n\n });\n\n}\n\n\n  ionViewWillEnter() {\n  this.loaduser() ;\n  this.getaccount() ;\n\n  }\n\n  async loadaccount() {\n   this.useraccount = await this.termsuserservice.getuseraccount();\n  }\n\n   async getaccount() {\n\n   this.loggedinuser = await this.termsuserservice.getloggedinuser();\n\n   if(!this.loggedinuser) {\n     return;\n   }\n\n   var data = {\n     googleid: this.loggedinuser.uid,\n     };\n\n     this.termsuserservice.getaccount(data).then(data1=> {\n     if(data1) {\n     this.useraccount = data1\n     }\n   }) .catch((err1)=> {\n\n  });;;\n\n\n  }\n\n\n  ngOnInit() {\n\n  this.loaduser() ;\n  this.getaccount() ;\n  }\n\nlikeproduct() {\n}\n\n\n\n   likecompany() {\n   }\n\n   updateProducts() {\n\n/*    \n    var tmp = this.productqueryText.trim().split(\" \");\n    var toSearch =  tmp[0]; // \"/\"+tmp.join('|') + \"/\";\n//    var patt = new RegExp(tmp1) ;\n//    alert(tmp1);\n\n    this.products.length = 0;\n    for(var i=0; i< this.products1.length; i++ ) {\n//      if(Dashscreen.products[i].scope.search(new RegExp(toSearch, \"i\"))) {\n       this.products.push(this.products1[i]);\n//      }\n    }\n\n\nvarv  string = \"Hi welcome to stack overflow\"\nvar toSearch = \"stack\"\n\n//case insensitive search\n\nvar result = string.search(new RegExp(toSearch, \"i\")) > 0 ? 'Matched' : 'notMatched'\n\n*/\n\n   }\n \n   logout() {\n    this.logoutuser() ;\n    this.fireauth.auth.signOut().then(() => {\n      this.router.navigate(['/tabs/login']);\n    })\n  }\n\n   login() {\n      this.router.navigate(['/tabs/login']);\n  }\n\n\n  displayemailmsg()  {\n     this.presentAlert(\"Email sent\", \"Email:\"+this.webemail, \"Check email for instructions\" );\n  }\n\n  async websendemail() {\n\n   this.loggedinuser = await this.termsuserservice.getloggedinuser();\n\n\n    var data = {\n     network: this.network,\n     paymentdata: 'null',\n     email: this.loggedinuser?this.loggedinuser.email: null,\n     googleid: this.loggedinuser?this.loggedinuser.uid: null,\n     kycid: this.useraccount?this.useraccount.kycid: null,\n     webemail: this.webemail\n   };\n\n   if(data.email == null) {\n     this.anonymoususer.push(this.webemail);\n     this.storage.set(environment.storageuniq+'anonymoususer', this.anonymoususer);\n     if(this.anonymoususer.length > 1) {\n        this.presentAlert(\"\", \"\", \"Login to proceed \"  );\n        this.router.navigate(['/nego/login']);\n     }\n\n   }\n\n   this.blue011web.websendemail(data).then((controldata: any) => {\n\n    this.displayemailmsg() ;\n\n   }).catch((err1)=> {\n\n        console.log(err1._body);\n     var err ;\n        try {\n     err = JSON.parse(err1._body);\n        } catch(errx) {\n\n        }\n     if(err && err.response) {\n     this.presentAlert('Failed to send email', err.response.message  ,  '' );\n\n    } else {\n      this.presentAlert(\"\", \"\", \"Failed to send email  \" );\n    }\n\n\n\n    // restore old wallet\n   })\n\n}\n\n  async presentAlert(title, subheader, message) {\n    const alert = await this.alertController.create({\n      header: title,\n      subHeader: subheader,\n      message: message,\n      buttons: ['OK']\n    });\n\n    await alert.present();\n    setTimeout( async ()=>{\n      await alert.dismiss();\n   }, 2000);\n\n  }\n \n  logoutuser() {\n       this.storage.set(environment.storageuniq+'loggedinuser',null).then(x=> {\n        this.loggedinuser = null;\n       });;\n\n    this.storage.set(environment.storageuniq+'useraccount', null).then(xx=>{\n       this.termsuserservice.reflectuseraccount();\n\n   });;\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Storage } from '@ionic/storage';\n//import 'rxjs/add/operator/map';\nimport {of as observableOf} from 'rxjs';\nimport {map, tap} from 'rxjs/operators';\nimport {environment} from '../../config/environment';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MysearchService {\n  public token: any;\n  url: string ;\n  apiKey = '813705e2f4cafa9acd1b2a0c29855';\n  apiSecret = '37daac26f3726a3a759fc30dd111d1abd508418753d5a5c6ed0a2b1';\n  localname = \"search\";\n  offerjson : any;\n\n  constructor(public http: Http, public storage: Storage) {\n   this.url = environment.hosteddomain ;\n\n  }\n  \n  getnewproductwithofferings (details: any) {\n\n\n        return new Promise((resolve, reject) => {\n\n             this.storage.get(environment.storageuniq+'token').then((value) => {\n\n             this.token = value;\n             let headers = new Headers();\n             headers.append('Authorization', this.token);\n             headers.append('Content-Type', 'application/json');\n\n\n            this.http.post(this.url + '/getnewproductwithofferings', JSON.stringify(details), {headers: headers})\n              .subscribe(res => {\n\n                let data = res.json();\n                resolve(data);\n\n              }, (err) => {\n                reject(err);\n              });\n\n        });\n        });\n\n  }\n  getmydeals (details: any) {\n\n\n        return new Promise((resolve, reject) => {\n\n             this.storage.get(environment.storageuniq+'token').then((value) => {\n\n             this.token = value;\n             let headers = new Headers();\n             headers.append('Authorization', this.token);\n             headers.append('Content-Type', 'application/json');\n\n\n            this.http.post(this.url + '/getmydeals', JSON.stringify(details), {headers: headers})\n              .subscribe(res => {\n\n                let data = res.json();\n                resolve(data);\n\n              }, (err) => {\n                reject(err);\n              });\n\n        });\n        });\n\n  }\n\n  getmyoffer (details: any) {\n\n\n        return new Promise((resolve, reject) => {\n\n             this.storage.get(environment.storageuniq+'token').then((value) => {\n\n             this.token = value;\n             let headers = new Headers();\n             headers.append('Authorization', this.token);\n             headers.append('Content-Type', 'application/json');\n\n\n            this.http.post(this.url + '/getmyoffer', JSON.stringify(details), {headers: headers})\n              .subscribe(res => {\n\n                let data = res.json();\n                resolve(data);\n\n              }, (err) => {\n                reject(err);\n              });\n\n        });\n        });\n\n  }\n\n\n\n  offerupdate (details: any) {\n\n\n        return new Promise((resolve, reject) => {\n\n             this.storage.get(environment.storageuniq+'token').then((value) => {\n\n             this.token = value;\n             let headers = new Headers();\n             headers.append('Authorization', this.token);\n             headers.append('Content-Type', 'application/json');\n\n\n            this.http.post(this.url + '/updateoffering', JSON.stringify(details), {headers: headers})\n              .subscribe(res => {\n\n                let data = res.json();\n                resolve(data);\n\n              }, (err) => {\n                reject(err);\n              });\n\n        });\n        });\n\n  }\n \n/*\n  getsign(message)\n  {\n    var sign = merged.stdcrypto\n   .createHmac('sha512', this.apiSecret)\n   .update(JSON.stringify(message))\n   .digest('hex');\n    return sign;\n  }\n   getMessage(greet:string, amount: number){\n\n   var data = {\n         \"id\": \"test\",\n        \"jsonrpc\": \"1.1\",\n        \"method\": \"getMessage\",\n        \"params\": {\n         shorturl: true,\n         parturl: true,\n         directurl: true,\n         greeting: greet,\n\t amount: amount\n        }\n        } ;\n    return new Promise((resolve, reject) => {\n\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      headers.append('api-key', this.apiKey);\n      headers.append('sign', this.getsign(data) );\n\n      this.http.post(this.url ,JSON.stringify(data), {headers: headers})\n        .pipe( map(res => res.json()),\n         tap (res => { resolve(res); }),\n        );\n            \n  });\n\n }\n\n\n// encash url, direct, part, similar\n   encashMessage(message:string, pin: string, address: string){\n\n   var data = {\n         \"id\": \"test\",\n        \"jsonrpc\": \"1.1\",\n        \"method\": \"encashMessage\",\n        \"params\": {\n         message: message,\n         pin: pin,\n\t address: address\n        }\n        } ;\n    return new Promise((resolve, reject) => {\n\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      headers.append('api-key', this.apiKey);\n      headers.append('sign', this.getsign(data) );\n\n      this.http.post(this.url ,JSON.stringify(data), {headers: headers})\n        .pipe( map(res => res.json()),\n        tap(res => {\n          resolve(res);\n        }, (err) => {\n          reject(err);\n        });\n            \n  });\n\n }\n  \n*/\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Storage } from '@ionic/storage';\n//import 'rxjs/add/operator/map';\nimport {of as observableOf} from 'rxjs';\nimport {map, tap} from 'rxjs/operators';\nimport {environment} from '../../config/environment';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n  public token: any;\n  url: string ;\n  apiKey = '813705e2f4cafa9acd1b2a0c29855';\n  apiSecret = '37daac26f3726a3a759fc30dd111d1abd508418753d5a5c6ed0a2b1';\n  localname = \"offercreate\";\n  offerjson : any;\n\n  constructor(public http: Http, public storage: Storage) {\n    this.url = environment.hosteddomain ;\n\n  }\n  \n\n\n  searchproducts (details: any) {\n\n\n        return new Promise((resolve, reject) => {\n\n          this.storage.get(environment.storageuniq+'token').then((value) => {\n\n                        this.token = value;\n\n                        let headers = new Headers();\n                        headers.append('Authorization', this.token);\n\n            headers.append('Content-Type', 'application/json');\n\n            this.http.post(this.url + '/searchproducts', JSON.stringify(details), {headers: headers})\n              .subscribe(res => {\n\n                let data = res.json();\n                resolve(data);\n\n              }, (err) => {\n                reject(err);\n              });\n        });\n\n        });\n\n  }\n\n  searchcompanies (details: any) {\n\n\n        return new Promise((resolve, reject) => {\n\n             this.storage.get(environment.storageuniq+'token').then((value) => {\n\n             this.token = value;\n             let headers = new Headers();\n             headers.append('Authorization', this.token);\n             headers.append('Content-Type', 'application/json');\n\n\n            this.http.post(this.url + '/searchcompanies', JSON.stringify(details), {headers: headers})\n              .subscribe(res => {\n\n                let data = res.json();\n                resolve(data);\n\n              }, (err) => {\n                reject(err);\n              });\n\n        });\n        });\n\n  }\n\n\n\n  offerupdate (details: any) {\n\n\n        return new Promise((resolve, reject) => {\n\n             this.storage.get(environment.storageuniq+'token').then((value) => {\n\n             this.token = value;\n             let headers = new Headers();\n             headers.append('Authorization', this.token);\n             headers.append('Content-Type', 'application/json');\n\n\n            this.http.post(this.url + '/updateoffering', JSON.stringify(details), {headers: headers})\n              .subscribe(res => {\n\n                let data = res.json();\n                resolve(data);\n\n              }, (err) => {\n                reject(err);\n              });\n\n        });\n        });\n\n  }\n \n/*\n  getsign(message)\n  {\n    var sign = merged.stdcrypto\n   .createHmac('sha512', this.apiSecret)\n   .update(JSON.stringify(message))\n   .digest('hex');\n    return sign;\n  }\n   getMessage(greet:string, amount: number){\n\n   var data = {\n         \"id\": \"test\",\n        \"jsonrpc\": \"1.1\",\n        \"method\": \"getMessage\",\n        \"params\": {\n         shorturl: true,\n         parturl: true,\n         directurl: true,\n         greeting: greet,\n\t amount: amount\n        }\n        } ;\n    return new Promise((resolve, reject) => {\n\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      headers.append('api-key', this.apiKey);\n      headers.append('sign', this.getsign(data) );\n\n      this.http.post(this.url ,JSON.stringify(data), {headers: headers})\n        .pipe( map(res => res.json()),\n         tap (res => { resolve(res); }),\n        );\n            \n  });\n\n }\n\n\n// encash url, direct, part, similar\n   encashMessage(message:string, pin: string, address: string){\n\n   var data = {\n         \"id\": \"test\",\n        \"jsonrpc\": \"1.1\",\n        \"method\": \"encashMessage\",\n        \"params\": {\n         message: message,\n         pin: pin,\n\t address: address\n        }\n        } ;\n    return new Promise((resolve, reject) => {\n\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      headers.append('api-key', this.apiKey);\n      headers.append('sign', this.getsign(data) );\n\n      this.http.post(this.url ,JSON.stringify(data), {headers: headers})\n        .pipe( map(res => res.json()),\n        tap(res => {\n          resolve(res);\n        }, (err) => {\n          reject(err);\n        });\n            \n  });\n\n }\n  \n*/\n\n\n}\n"],"sourceRoot":""}